<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Data.v11.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Data.UnboundColumnType">

            <summary>
                <para>Contains values that specify the data type and binding mode of columns.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Boolean">
            <summary>
                <para>Indicates that the column is unbound and it contains Boolean values (the <see cref="T:System.Boolean"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Bound">
            <summary>
                <para>Indicates that the column is bound to a field in the control's underlying data source. The type of data this column contains is determined by the bound field.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.DateTime">
            <summary>
                <para>Indicates that the column is unbound and it contains date/time values (the <see cref="T:System.DateTime"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Decimal">
            <summary>
                <para>Indicates that the column is unbound and it contains decimal values (the <see cref="T:System.Decimal"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Integer">
            <summary>
                <para>Indicates that the column is unbound and it contains integer values (the <see cref="T:System.Int32"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Object">
            <summary>
                <para>Indicates that the column is unbound and it contains values of any type. A <see cref="T:DevExpress.XtraEditors.TextEdit"/> editor is assigned for the in-place editing of such a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.String">
            <summary>
                <para>Indicates that the column is unbound and it contains string values (the <see cref="T:System.String"/> type). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.DefaultBoolean">

            <summary>
                <para>Lists values which specify the validity of a condition (indicates whether the condition is true or false).
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.Default">
            <summary>
                <para>The value is determined by a control's current setting. The default value is automatically set for a control if an end-user doesn't specify a value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.False">
            <summary>
                <para>Corresponds to a Boolean value of <b>false</b>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.True">
            <summary>
                <para>Corresponds to a Boolean value of <b>true</b>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.SelectionChangedEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.SelectionChanged"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventHandler.Invoke(System.Object,DevExpress.Data.SelectionChangedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.SelectionChanged"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Data.SelectionChangedEventArgs">

            <summary>
                <para>Provides data for the selection changed events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Int32)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> class with the specified settings.
</para>
            </summary>
            <param name="action">
		A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value which specifies how the collection has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.Action"/> property.

            </param>
            <param name="controllerRow">
		A zero-based integer specifying the handle of the row whose selected state has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.SelectionChangedEventArgs.Action">
            <summary>
                <para>Gets an action which describes how the collection has been changed.
</para>
            </summary>
            <value>A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value which specifies how the collection has been changed.
</value>


        </member>
        <member name="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow">
            <summary>
                <para>Identifies the row whose selected state has been changed.
</para>
            </summary>
            <value>A zero-based integer identifying the row whose selected state has been changed.
</value>


        </member>
        <member name="T:DevExpress.Utils.Commands.Command">

            <summary>
                <para>Represents a command.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Commands.Command.CanExecute">
            <summary>
                <para>Determines whether the command can execute in its current state.
</para>
            </summary>
            <returns><b>true</b> if the command can execute; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.CommandSourceType">
            <summary>
                <para>Gets or sets the type of the object which invokes the command.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Commands.CommandSourceType"/> enumeration value, specifying the object type.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.CreateDefaultCommandUIState">
            <summary>
                <para>Creates an object defining the command state for the current command. 
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface that defines the command state.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.Description">
            <summary>
                <para>Gets the text description of a command.
</para>
            </summary>
            <value>A string containing the command's description.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.Execute">
            <summary>
                <para>Executes the command on the current command target.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.ForceExecute(DevExpress.Utils.Commands.ICommandUIState)">
            <summary>
                <para>Performs a command action regardless of a command state.
</para>
            </summary>
            <param name="state">
		An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the command state.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.HideDisabled">
            <summary>
                <para>Gets or sets whether the object to which the command is attached is hidden, if the command is disabled.
</para>
            </summary>
            <value><b>true</b> to hide the object with a disabled command; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.Image">
            <summary>
                <para>Gets an image associated with the command.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.LargeImage">
            <summary>
                <para>Gets a larger image associated with the command.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.MenuCaption">
            <summary>
                <para>Gest the menu caption associated with the current command.
</para>
            </summary>
            <value>A string representing the text of the menu item.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.UpdateUIState(DevExpress.Utils.Commands.ICommandUIState)">
            <summary>
                <para>Updates the command state.
</para>
            </summary>
            <param name="state">
		An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the state of a command.

            </param>


        </member>
        <member name="T:DevExpress.Schedule.WorkDayType">

            <summary>
                <para>Lists day types by the working activity.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Schedule.WorkDayType.ExactWorkDay">
            <summary>
                <para>Indicates that a particular, exact date is a work day.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.WorkDayType.Holiday">
            <summary>
                <para>Indicates that this day is a holiday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.WorkDayType.WeekDay">
            <summary>
                <para>Indicates a weekday.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnSortMode">

            <summary>
                <para>Lists the values that specify how a column's data should be sorted.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Custom">
            <summary>
                <para>Enables custom sorting of the column's data via the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.CustomColumnSort"/> event.

<para>
Enables custom grouping of the rows when grouping is applied against the current column via the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomColumnGroup"/> event.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Default">
            <summary>
                <para>Sorts the column's data according to the type of the editor assigned to the column. 

<para>
For columns which use <see cref="T:DevExpress.XtraEditors.LookUpEdit"/> and <see cref="T:DevExpress.XtraEditors.ImageComboBoxEdit"/> in-place editors the data is sorted by the displayed values (the strings displayed within the column's cells). 
</para>

For other columns their data is sorted by the edit values (these are synchronized with the bound data source's values). For some editors (<see cref="T:DevExpress.XtraEditors.TextEdit"/>, <see cref="T:DevExpress.XtraEditors.ComboBoxEdit"/>, etc), however, the edit values match the display values.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.DisplayText">
            <summary>
                <para>Sorts the column's data by the column's display text (the strings displayed within the column's cells). 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Value">
            <summary>
                <para>Sorts the column's data by the column's edit values (these are synchronized with the bound data source's values). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnGroupInterval">

            <summary>
                <para>Lists the values that specify how the data rows are combined into groups when in grouping mode.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Alphabetical">
            <summary>
                <para>Rows are grouped by the character that their values start with.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Date">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped by the date part of their values, the time portion is ignored in this grouping mode. </para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateMonth">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped by the month part of their values. </para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateRange">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped into the following groups according to their date value as compared with the current system date: "Today", "Tomorrow", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Next Week", "Two Weeks Away", "Three Weeks Away", "Next Month", "Beyond Next Month", "Yesterday", "Last Week", "Two Weeks Ago", "Three Weeks Ago", "Last Month", "Older".
</para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateYear">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped by the year part of their values.
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Default">
            <summary>
                <para>In regular binding mode, for columns which store date/time values, this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Date"/> option. For non date/time columns this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Value"/> option.

<para>
In server mode, rows are always grouped by values. See the description of the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Value"/> option.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DisplayText">
            <summary>
                <para>Rows are grouped by cells' display values.

<para>
In specific instances, cells can have different edit values, but the same display value. To combine these rows into the same group, use the <b>DisplayText</b> group mode.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Value">
            <summary>
                <para>Rows are grouped by their values (the entire values of each row in a group have to match). The number of groups matches the number of unique values within the grouping column. 

<para>
Note that <see cref="T:System.DateTime"/> objects which have the same date portion but different time portions are treated as unique values (each has it's own group).
</para>


</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.TextAlignment">

            <summary>
                <para>Specifies how the text associated with the control should be aligned.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomCenter">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomJustify">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally justified. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomLeft">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned on the left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomRight">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleCenter">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned at the center.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleJustify">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally justified. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleLeft">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned on the left. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleRight">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopCenter">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopJustify">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally justified. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopLeft">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned on the left. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopRight">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.ImageSizeMode">

            <summary>
                <para>Specifies how an image is positioned within a <b>picture control</b>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.AutoSize">
            <summary>
                <para>The <b>picture control's</b> size is adjusted to that of the image it contains.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.CenterImage">
            <summary>
                <para>The image is displayed in the center of the <b>picture control</b>. If the image is larger than the <b>picture control</b>, the outside edges are clipped.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Normal">
            <summary>
                <para>The image is placed in the upper-left corner of the <b>picture control</b>. The image is clipped if it's larger than the <b>picture control</b> which contains it.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Squeeze">
            <summary>
                <para>If the <b>picture control</b>'s dimensions exceed that of the image it contains, the image is centered and shown full-size. Otherwise, the image is resized to fit into the <b>picture control</b>'s dimensions.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.StretchImage">
            <summary>
                <para>The image within the <b>picture control</b> is stretched or shrunk as appropriate to fit the size of the <b>picture control</b>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.ZoomImage">
            <summary>
                <para>The image is sized proportionally (without clipping), so that it's best fitted to the image control. If the height and width ratio of the image control is the same as the image's ratio it will be resized to exactly fit into the image control. Otherwise the closest fitting side (height or width) of the image will be sized to the control and the other side (height or width) of the image sized proportionally (leaving empty space). 

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BorderDashStyle">

            <summary>
                <para>Lists the values used to specify the border's dash style for an <see cref="T:DevExpress.XtraReports.UI.XRControl"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Dash">
            <summary>
                <para>Specifies a line consisting of dashes.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.DashDot">
            <summary>
                <para>Specifies a line consisting of a repeating dash-dot pattern. Not supported in HTML (becomes visible as <b>Dash</b>)

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.DashDotDot">
            <summary>
                <para>Specifies a line consisting of a repeating dash-dot-dot pattern. Not supported in HTML (becomes visible as <b>Dash</b>)

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Dot">
            <summary>
                <para>Specifies a line consisting of dots.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Double">
            <summary>
                <para>Specifies a double solid line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Solid">
            <summary>
                <para>Specifies a solid line.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Services.IProgressIndicationService">

            <summary>
                <para>Exposes functionality that enables you to display progress indicator for time-consuming operations.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.Begin(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="displayName">
		 [To be supplied] 
            </param>
            <param name="minProgress">
		 [To be supplied] 
            </param>
            <param name="maxProgress">
		 [To be supplied] 
            </param>
            <param name="currentProgress">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.End">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.SetProgress(System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="currentProgress">
		 [To be supplied] 
            </param>


        </member>
        <member name="T:DevExpress.Data.IDataDictionary">

            <summary>
                <para>Represents the interface which provides methods that return custom names for the Field List items.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.IDataDictionary.GetDataSourceDisplayName">
            <summary>
                <para>If implemented by a class, returns the name displayed for a datasource in a Field List.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value specifying the datasource's name.
</returns>


        </member>
        <member name="M:DevExpress.Data.IDataDictionary.GetObjectDisplayName(System.String)">
            <summary>
                <para>If implemented by a class, returns the name displayed in a Field List for the name of a table or column item.

</para>
            </summary>
            <param name="dataMember">
		A <see cref="T:System.String"/> value specifying the data member name of the item whose displayed name in the Field List is to be obtained. 

            </param>
            <returns>A <see cref="T:System.String"/> value specifying the name of the <b>dataMember</b>.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheBase">

            <summary>
                <para>Base class for classes that implement data store caching.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.#ctor(DevExpress.Xpo.Helpers.ICommandChannel)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="nestedCommandChannel">
		 

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheBase.AutoCreateOption">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
            <summary>
                <para>When implemented by a descendant class, applies specified configuration settings to a cached data store.
</para>
            </summary>
            <param name="configuration">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.GetStorageTables(System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="tables">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.GetStorageTablesList">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.InitializeLifetimeService">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.IsBadForCache(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,DevExpress.Xpo.DB.JoinNode)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="config">
		 

            </param>
            <param name="node">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.IsBadForCache(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.String)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="config">
		 

            </param>
            <param name="tableName">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="dmlStatements">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="statements">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="dirtyTablesNames">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.NotifyDirtyTables(System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="dirtyTablesNames">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.Reset">
            <summary>
                <para>When implemented by a descendant class, resets or clears any cached information on data store tables (such as table update information and cached query results).
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="selects">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="selects">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="tables">
		 

            </param>
            <param name="dontCreateIfFirstTableNotExist">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="dontCreateIfFirstTableNotExist">
		 

            </param>
            <param name="tables">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.WordAddedEventHandler">

            <summary>
                <para>Methods that will handle the <b>WordAdded</b> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.WordAddedEventHandler.Invoke(System.Object,DevExpress.XtraSpellChecker.WordAddedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.
</para>
            </summary>
            <param name="sender">
		An object of any type that triggers the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraSpellChecker.WordAddedEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.WordAddedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> and <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.WordAddedEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the WordAddedEventArgs class with the specified settings. 


</para>
            </summary>
            <param name="word">
		A word that has been added to the custom dictionary.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.WordAddedEventArgs.Word">
            <summary>
                <para>Gets a word added to the dictionary.
</para>
            </summary>
            <value>A string representing a word added to the dictionary.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.Localization.PreviewResLocalizer">

            <summary>
                <para>Represents a default localizer to translate the XtraPrinting's resources.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewResLocalizer.#ctor">
            <summary>
                <para>Initializes a new instance of the PreviewResLocalizer class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewResLocalizer.GetLocalizedString(DevExpress.XtraPrinting.Localization.PreviewStringId)">
            <summary>
                <para>Gets the string, localized by the current PreviewResLocalizer, for the specified user interface element.
</para>
            </summary>
            <param name="id">
		A <see cref="T:DevExpress.XtraPrinting.Localization.PreviewStringId"/> enumeration value specifying the UI element whose caption (text) is to be localized.

            </param>
            <returns>A <see cref="T:System.String"/> representing the text to be displayed within the specified UI element.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.Localization.PreviewResLocalizer.Language">
            <summary>
                <para>Gets a value indicating which language is currently used by this localizer object.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing the language used for the XtraPrinting's user interface.
</value>


        </member>
        <member name="T:DevExpress.Schedule.DateCheckResult">

            <summary>
                <para>Lists the day types regarding the recognized working activity. 

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Schedule.DateCheckResult.Holiday">
            <summary>
                <para>This date is treated as a holiday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.DateCheckResult.Unknown">
            <summary>
                <para>This date cannot be attributed to a working day or holiday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.DateCheckResult.WorkDay">
            <summary>
                <para>This date is treated as a working day.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Schedule.WorkDay">

            <summary>
                <para>Serves as a base class for classes that represent a day, regarding the working activity recognized for the specific date. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.WorkDay.CheckDate(System.DateTime)">
            <summary>
                <para>Determines how to treat the specified date in terms of the work day and a holiday.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value, representing the date to check.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.DateCheckResult"/> enumeration member.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.WorkDay.IsWorkDay(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current working day.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to be identified.

            </param>
            <returns><b>true</b> if the specified date is a working day; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Schedule.WorkDay.Type">
            <summary>
                <para>Gets the type of the day that the current instance of the WorkDay class descendant represents.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Schedule.WorkDayType"/> enumeration member specifying the day type.
</value>


        </member>
        <member name="T:DevExpress.Data.IRelationListEx">

            <summary>
                <para>An extended version of the <see cref="T:DevExpress.Data.IRelationList"/> interface, that can be implemented by a data source to support master-detail relationships.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.IRelationListEx.GetRelationCount(System.Int32)">
            <summary>
                <para>When implemented by a class, returns the number of relationships for a master row.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the master row.

            </param>
            <returns>An integer value that specifies the number of relationships for a master row.
</returns>


        </member>
        <member name="M:DevExpress.Data.IRelationListEx.GetRelationDisplayName(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns the display caption of a particular relationship in a specific master row. 
</para>
            </summary>
            <param name="index">
		An integer value that specifies the master row.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>A string value that specifies the display caption of a particular relationship in a specific master row. 
</returns>


        </member>
        <member name="T:DevExpress.Data.IRelationList">

            <summary>
                <para>An interface that can be implemented by a data source to support master-detail relationships.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.IRelationList.GetDetailList(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns detail data for a relationship.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the index of a master row in the data source.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>An object that implements the <b>IList</b> interface and represents detail data for a relationship.
</returns>


        </member>
        <member name="M:DevExpress.Data.IRelationList.GetRelationName(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns the name of a master-detail relationship.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the index of a master row in the data source.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>The name of a master-detail relationship.
</returns>


        </member>
        <member name="M:DevExpress.Data.IRelationList.IsMasterRowEmpty(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns a Boolean value that specifies whether a specific detail of a particular master row contains data.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the index of a master row in the data source.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>A Boolean value that specifies whether a specific detail of a particular master row contains data.
</returns>


        </member>
        <member name="P:DevExpress.Data.IRelationList.RelationCount">
            <summary>
                <para>When implemented by a class, returns the number of master-detail relationships for the current master data source.
</para>
            </summary>
            <value>An integer value that specifies the number of master-detail relationships for the current master data source.
</value>


        </member>
        <member name="T:DevExpress.Services.KeyboardHandlerServiceWrapper">

            <summary>
                <para>Represents  a base class for custom services used to process keyboard input.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.#ctor(DevExpress.Services.IKeyboardHandlerService)">
            <summary>
                <para>Initializes a new instance of the KeyboardHandlerServiceWrapper class with the specified service.
</para>
            </summary>
            <param name="service">
		An object exposing the <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method to handle a key down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the pressed key and key modifiers.

            </param>


        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
                <para>Override this method to handle a key press event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> object specifying the character that is composed when the user presses a key.

            </param>


        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method to handle a key up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the released key and key modifiers.

            </param>


        </member>
        <member name="P:DevExpress.Services.KeyboardHandlerServiceWrapper.Service">
            <summary>
                <para>Provides access to the service interface of the wrapper.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface of the wrapper.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellCheckMode">

            <summary>
                <para>Lists available operation modes of the spell checker.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.AsYouType">
            <summary>
                <para>Starts spelling check when you finish typing the word or move the cursor after changing it.This operation mode underlines the misspelled word and allows you to select a suggestion from the context menu, invoked by right-clicking the word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.OnDemand">
            <summary>
                <para>Starts spelling check and invokes the spelling form for making corrections.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.WebUtils.ViewStatePersisterCore">

            <summary>
                <para>Represents a base for classes providing different options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor">
            <summary>
                <para>Initializes a new instance of the ViewStatePersisterCore class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor(DevExpress.WebUtils.IViewBagOwner)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="viewBagOwner">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="viewBagOwner">
		 [To be supplied] 
            </param>
            <param name="objectPath">
		 [To be supplied] 
            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind">

            <summary>
                <para>Specifies the prototype string format for the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/>.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.Default">
            <summary>
                <para>The current string format is based on the default string format.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.GenericDefault">
            <summary>
                <para>The current string format is based on the generic default string format.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.GenericTypographic">
            <summary>
                <para>The current string format is based on the generic typographic string format.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellCheckOperation">

            <summary>
                <para>Lists implemented spell checker operations.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.AddToDictionary">
            <summary>
                <para>Replaces a word in the text with the user input, and adds the replacement to the custom dictionary.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Cancel">
            <summary>
                <para>Stops the spelling checker operation, resets the checking strategy and closes the spelling form. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Change">
            <summary>
                <para>Replaces the current word in the text being checked with the suggested word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.ChangeAll">
            <summary>
                <para>Replaces all occurences of the current word in the text being checked with the suggested word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Custom">
            <summary>
                <para>This enumeration member is intended for internal use only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Delete">
            <summary>
                <para>Deletes the current word from the text.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Ignore">
            <summary>
                <para>Disregards the current word and proceeds to the next one.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.IgnoreAll">
            <summary>
                <para>Disregards the current word and all its occurences in the text.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.None">
            <summary>
                <para>This enumeration member is intended for internal use only. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Options">
            <summary>
                <para>Invokes the spelling options form. After closing the form, re-checks the text with new spelling options starting with the last checked word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Recheck">
            <summary>
                <para>Forces the spell checker to check the last checked word again.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentChange">
            <summary>
                <para>Replaces the current word in the text being checked with the suggested word. For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentIgnore">
            <summary>
                <para>Disregards the current word and proceeds to the next one. For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Undo">
            <summary>
                <para>Cancels the effect of the last operation, restoring the text to its previous state.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching">

            <summary>
                <para>Lists the values that specify the scope of cache configuration settings in cached data stores.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.All">
            <summary>
                <para>All tables will be cached, regardless of their inclusion in the configuration settings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.InList">
            <summary>
                <para>Only tables specified in configuration settings will be cached.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.NotInList">
            <summary>
                <para>All tables except for the tables specified in configuration settings will be cached.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo">

            <summary>
                <para>Provides methods to return error information for a business object's properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetError(DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
                <para>When implemented by a class, this method returns information on an error associated with a business object.
</para>
            </summary>
            <param name="info">
		An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetPropertyError(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
                <para>When implemented by a class, this method returns information on an error associated with a specific business object's property.
</para>
            </summary>
            <param name="propertyName">
		A string that identifies the name of the property for which information on an error is to be returned.

            </param>
            <param name="info">
		An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo">

            <summary>
                <para>Encapsulates error information on a specific property.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ErrorInfo class with the default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorType)">
            <summary>
                <para>Initializes a new instance of the ErrorInfo class with the specified error information.
</para>
            </summary>
            <param name="errorText">
		A string that specifies the error text. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText"/> property.

            </param>
            <param name="errorType">
		An error type. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType"/> property.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText">
            <summary>
                <para>Gets or sets the error text associated with the current property name.
</para>
            </summary>
            <value>A string that represents the error text.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType">
            <summary>
                <para>Gets or sets the type of error associated with the current property name.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType"/> value that represents the error type.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType">

            <summary>
                <para>Enumerates error icon types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Critical">
            <summary>
                <para>The 'Critical Error' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Default">
            <summary>
                <para>The default error icon specified by the <see cref="P:DevExpress.XtraEditors.BaseEdit.ErrorIcon"/> property: 

<para>
The <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event is not raised when an error of the <b>Default</b> type is assigned to an editor.
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Information">
            <summary>
                <para>The 'Information' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.None">
            <summary>
                <para>Indicates that no error is associated with an editor or a cell.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User1">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User2">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User3">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User4">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User5">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User6">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User7">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User8">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User9">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Warning">
            <summary>
                <para>The 'Warning' icon: 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.IIgnoreList">

            <summary>
                <para>Represents a list of words ignored during spell check. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Add(System.String)">
            <summary>
                <para>Adds a specified word to a list of ignored words.
</para>
            </summary>
            <param name="word">
		A string representing a word to be ignored.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Add(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
            <summary>
                <para>Adds a specified word to a list of ignored words, so that it is ignored only in the specified location.
</para>
            </summary>
            <param name="start">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text.

            </param>
            <param name="end">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text.

            </param>
            <param name="word">
		A string representing a word to be ignored if located between the start and the end positions.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Contains(System.String)">
            <summary>
                <para>Determines whether a word is in the list of ignored words.
</para>
            </summary>
            <param name="word">
		A string to locate in the list of ignored words.

            </param>
            <returns><b>true</b> if the word is found within the list; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Contains(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
            <summary>
                <para>Determines whether a word is in the list of ignored words, ignored in the specified location.

</para>
            </summary>
            <param name="start">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="end">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="word">
		A string to locate in the list of ignored words.

            </param>
            <returns><b>true</b> if the word is found within the list and marked as effective in the specified location; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Remove(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
            <summary>
                <para>Removes a word from the list of words ignored only once.
</para>
            </summary>
            <param name="start">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="end">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="word">
		A string representing a word to remove from the list.


            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Remove(System.String)">
            <summary>
                <para>Removes a word from the list.
</para>
            </summary>
            <param name="word">
		A string representing a word to remove form the list.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventHandler">

            <summary>
                <para>Represents a method that will handle the event raised after an option value change.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventHandler.Invoke(System.Object,DevExpress.Utils.Controls.BaseOptionChangedEventArgs)">
            <summary>
                <para>Represents a method that will handle the event raised after the option has been changed.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object that contains data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs">

            <summary>
                <para>Provides data for the events that fire after option changes .
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value representing the name of the option whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name"/> property.

            </param>
            <param name="oldValue">
		A <see cref="T:System.Object"/> value representing the option's previous value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue"/> property.

            </param>
            <param name="newValue">
		A <see cref="T:System.Object"/> value representing the option's current value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object with default values.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name">
            <summary>
                <para>Gets the name of the option whose value has been changed.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value representing the option's name.
</value>


        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue">
            <summary>
                <para>Gets or sets the option's current value. 
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value representing the option's current value.
</value>


        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue">
            <summary>
                <para>Gets the option's previous value.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value representing the option's previous value.
</value>


        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptions">

            <summary>
                <para>Serves as a base for classes representing options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
            <summary>
                <para>Initializes a new instance of the BaseOptions class.
</para>
            </summary>
            <param name="viewBagOwner">
		An object that implements the IViewBagOwner interface.

            </param>
            <param name="objectPath">
		The string value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all settings from the options object passed as a parameter.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate">
            <summary>
                <para>Prevents the control from being updated until the <see cref="M:DevExpress.Utils.Controls.BaseOptions.CancelUpdate"/> or <see cref="M:DevExpress.Utils.Controls.BaseOptions.EndUpdate"/> method is called.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.CancelUpdate">
            <summary>
                <para>Re-enables control updates after the <see cref="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate"/> method call without causing immediate repainting of the control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.EndUpdate">
            <summary>
                <para>Re-enables control updates after the <see cref="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate"/> method call and forces an immediate update.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.Reset">
            <summary>
                <para>Resets all options to their default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.ToString">
            <summary>
                <para>Returns a string representing the currently enabled options.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value representing the currently enabled options. "" (String.Empty) if no option is enabled.
</returns>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventHandler.Invoke(System.Object,DevExpress.Data.CustomSummaryEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor(System.Int32,System.Object,System.Object,System.Int32,DevExpress.Data.CustomSummaryProcess,System.Object,System.Int32)">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object.
</para>
            </summary>
            <param name="controllerRow">
		An integer value identifying the processed row by its handle. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle"/> property.

            </param>
            <param name="totalValue">
		An object representing the custom calculated summary value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue"/> property.

            </param>
            <param name="fieldValue">
		An object representing the currently processed field value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue"/> property.

            </param>
            <param name="groupRowHandle">
		An integer value identifying the group row whose child data rows are involved in summary calculation. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle"/> property.

            </param>
            <param name="summaryProcess">
		A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value identifying the current calculation stage. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess"/> property.

            </param>
            <param name="item">
		An object representing the summary item whose value is being calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.Item"/> property.

            </param>
            <param name="groupLevel">
		An integer value indicating the nested group level of the processed row. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue">
            <summary>
                <para>Gets the processed field value.
</para>
            </summary>
            <value>An object representing the processed field value.
</value>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetGroupSummary(System.Int32,System.Object)">
            <summary>
                <para>Returns the value of the specified group summary for the specified group row.
</para>
            </summary>
            <param name="groupRowHandle">
		An integer that specifies a group row's handle.

            </param>
            <param name="summaryItem">
		An object representing the group summary item. In the GridControl, it's represented by the <see cref="T:DevExpress.XtraGrid.GridGroupSummaryItem"/> class.

            </param>
            <returns>The specified group summary's value.
</returns>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetValue(System.String)">
            <summary>
                <para>Returns the value in the specified field
</para>
            </summary>
            <param name="fieldName">
		A string that identifies the field whose value must be returned.

            </param>
            <returns>An object that represents the value of the specified field.
</returns>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel">
            <summary>
                <para>Gets the nested level of the group whose summary value is being calculated.
</para>
            </summary>
            <value>An integer value representing the zero-based nested level of the processed group.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle">
            <summary>
                <para>Gets a value identifying the group row whose child data rows are involved in summary calculation.
</para>
            </summary>
            <value>An integer value representing the handle of the group row containing the processed row as a child. <b>0</b> when calculating a total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsGroupSummary">
            <summary>
                <para>Gets whether a group summary value is being calculated.
</para>
            </summary>
            <value><b>true</b> if a group summary value is being calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsTotalSummary">
            <summary>
                <para>Gets whether a total summary value is being calculated.
</para>
            </summary>
            <value><b>true</b> if a total summary value is being calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.Item">
            <summary>
                <para>Gets a summary item whose value is being calculated.
</para>
            </summary>
            <value>An object representing a summary item whose value is being calculated.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle">
            <summary>
                <para>Gets the handle of the processed row.
</para>
            </summary>
            <value>An integer value identifying the processed data row by its handle.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess">
            <summary>
                <para>Gets a value indicating calculation stage.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value indicating calculation stage.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue">
            <summary>
                <para>Gets or sets the total summary value.
</para>
            </summary>
            <value>An object representing the total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValueReady">
            <summary>
                <para>Gets or sets whether the Calculation stage of the custom summary calculation process should be skipped.
</para>
            </summary>
            <value><b>true</b> if the Calculation stage of the custom summary calculation process should be skipped; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryExistEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryExistEventHandler.Invoke(System.Object,DevExpress.Data.CustomSummaryExistEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryExistEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryExistEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> class.
</para>
            </summary>
            <param name="groupRowHandle">
		An integer value specifying the handle of the group row whose summary value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle"/> property.

            </param>
            <param name="groupLevel">
		An integer value specifying the zero-based nesting level of the processed group. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel"/> property.

            </param>
            <param name="item">
		An object which represents the summary item whose value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.Item"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Exists">
            <summary>
                <para>Gets or sets whether the summary value should be calculated and displayed.
</para>
            </summary>
            <value><b>true</b> to calculate and display the summary value; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel">
            <summary>
                <para>Gets the nesting level of the group whose summary value is being calculated.
</para>
            </summary>
            <value>An integer value representing the zero-based nesting level of the processed group.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle">
            <summary>
                <para>Gets a value identifying the group row whose summary value is about to be calculated.
</para>
            </summary>
            <value>An integer value representing the handle of the group row whose summary value is about to be calculated. <b>0</b> when calculating a total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsGroupSummary">
            <summary>
                <para>Gets whether a group summary value is about to be calculated.
</para>
            </summary>
            <value><b>true</b> if a group summary value is about to be calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsTotalSummary">
            <summary>
                <para>Gets whether a total summary value is about to be calculated.
</para>
            </summary>
            <value><b>true</b> if a total summary value is about to be calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Item">
            <summary>
                <para>Gets a summary item whose value is about to be calculated.
</para>
            </summary>
            <value>An object representing a summary item whose value is about to be calculated.
</value>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryProcess">

            <summary>
                <para>Specifies the current status of custom summary calculation.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Calculate">
            <summary>
                <para>Indicates that custom summary calculation is in progress. This means the event is raised for a specific data row containing the field value used to calculate the processed custom summary.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Finalize">
            <summary>
                <para>Indicates that the process of custom summary calculation is finished. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Start">
            <summary>
                <para>Indicates that the process of custom summary calculation is about to be started. 

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.SummaryItemType">

            <summary>
                <para>Lists values specifying the aggregate function types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Average">
            <summary>
                <para>The average value of a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Count">
            <summary>
                <para>The record count.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Custom">
            <summary>
                <para>Specifies whether calculations should be performed manually using a specially designed event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Max">
            <summary>
                <para>The maximum value in a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Min">
            <summary>
                <para>The minimum value in a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.None">
            <summary>
                <para>Disables summary value calculation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.SummaryItemType.Sum">
            <summary>
                <para>The sum of all values in a column.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.ColumnSortOrder">

            <summary>
                <para>Lists values specifying the sort orders.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.ColumnSortOrder.Ascending">
            <summary>
                <para>Sorts the column in ascending order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ColumnSortOrder.Descending">
            <summary>
                <para>Sorts the columns in descending order.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ColumnSortOrder.None">
            <summary>
                <para>No sorting is applied to a column.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.LayoutUpgadeEventHandler">

            <summary>
                <para>Represents a method that will handle events raised when upgrading a control's layout (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.). 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutUpgadeEventHandler.Invoke(System.Object,DevExpress.Utils.LayoutUpgadeEventArgs)">
            <summary>
                <para>Represents a method that will handle events raised when upgrading a control's layout (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.).
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.LayoutUpgadeEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.LayoutUpgadeEventArgs">

            <summary>
                <para>Provides data for the events raised when upgrading a control's layout (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.).


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutUpgadeEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the LayoutUpgadeEventArgs class with the specified previous version.
</para>
            </summary>
            <param name="previousVersion">
		A <see cref="T:System.String"/> specifying the previous version number. This value is assigned to the <see cref="P:DevExpress.Utils.LayoutUpgadeEventArgs.PreviousVersion"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.LayoutUpgadeEventArgs.PreviousVersion">
            <summary>
                <para>Returns the textual representation of the previous layout version.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing the previous version of the layout.

</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickBorderStyle">

            <summary>
                <para>Specifies the border style for a brick.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Center">
            <summary>
                <para>The borders are drawn over the contour of the brick's rectangle, so that they are partially inside and outside of the brick.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Inset">
            <summary>
                <para>The borders are drawn inside the brick's rectangle.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Outset">
            <summary>
                <para>The borders are drawn outside the brick's rectangle.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.LockingException">

            <summary>
                <para>An exception thrown because an attempt is made to modify a row in a database, but its version doesn't match the version of the row being posted.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.LockingException.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.LockingException"/> class.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException">

            <summary>
                <para>An exception that is thrown when a key or index constraint fails.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the ConstraintViolationException class with the specified settings.
</para>
            </summary>
            <param name="sql">
		A string that specifies the SQL statement that raised the exception.

            </param>
            <param name="parameters">
		A string that specifies the parameters for the SQL statement.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
</para>
            </summary>
            <param name="info">
		The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.

            </param>
            <param name="context">
		The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.PaddingInfo">

            <summary>
                <para>Represents padding or margin information associated with a control or a brick.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified dpi value.
</para>
            </summary>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(DevExpress.XtraPrinting.PaddingInfo,System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class and copies the settings from the object passed as the parameter according to the specified dpi value.

</para>
            </summary>
            <param name="src">
		A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object whose settings are used to initialize the created object's properties.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Drawing.GraphicsUnit)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the dpi of the specified graphics unit.
</para>
            </summary>
            <param name="graphicsUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top, bottom and dpi values.

</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.

            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top and bottom values.


</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.


            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top and bottom values, and the dpi of the specified graphics unit.

</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.

            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>
            <param name="graphicsUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified settings.
</para>
            </summary>
            <param name="all">
		An integer value, specifying the overall padding.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value, specifying the dpi.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.All">
            <summary>
                <para>Specifies padding for all the element's sides.
</para>
            </summary>
            <value>An integer value, representing the overall padding.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Bottom">
            <summary>
                <para>Gets or sets the padding value for the bottom edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the bottom edge.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(System.Drawing.RectangleF,System.Single)">
            <summary>
                <para>Deflates the specified rectangle by the rectangle of the current padding with the specified dpi.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(System.Drawing.SizeF,System.Single)">
            <summary>
                <para>Deflates the specified size by the size of the current padding with the specified dpi.

</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the deflated size.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(System.Single,System.Single)">
            <summary>
                <para>Deflates the specified height value by the height of the current padding with the specified dpi.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(System.Single)">
            <summary>
                <para>Deflates the specified height value by the height of the current padding.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be deflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated height.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(System.Single,System.Single)">
            <summary>
                <para>Deflates the specified width value by the width of the current padding with the specified dpi.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be deflated.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated width.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(System.Single)">
            <summary>
                <para>Deflates the specified width value by the width of the current padding.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be deflated.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated width.

</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Dpi">
            <summary>
                <para>Gets or sets the dpi value used to perform internal calculations.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value which represents the dpi value for this padding.
</value>


        </member>
        <member name="F:DevExpress.XtraPrinting.PaddingInfo.Empty">
            <summary>
                <para>Provides a PaddingInfo object with no padding.

</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object representing an empty padding.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current PaddingInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current PaddingInfo instance; otherwise <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current PaddingInfo object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(System.Drawing.SizeF,System.Single)">
            <summary>
                <para>Inflates the specified size by the size of the current padding with the specified dpi.

</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.


            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the inflated size.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(System.Drawing.RectangleF,System.Single)">
            <summary>
                <para>Inflates the specified rectangle by the rectangle of the current padding with the specified dpi.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(System.Single,System.Single)">
            <summary>
                <para>Inflates the specified height value by the height of the current padding with the specified dpi.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before inflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(System.Single)">
            <summary>
                <para>Inflates the specified height value by the height of the current padding.
</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be inflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(System.Single,System.Single)">
            <summary>
                <para>Inflates the specified width value by the width of the current padding with the specified dpi.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be inflated.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before inflating.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated width.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(System.Single)">
            <summary>
                <para>Inflates the specified width value by the width of the current padding.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be inflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated width.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.IsEmpty">
            <summary>
                <para>Determines whether the padding is empty (all padding values are null).
</para>
            </summary>
            <value><b>true</b> if the padding is empty; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Left">
            <summary>
                <para>Gets or sets the padding value for the left edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the left edge.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Right">
            <summary>
                <para>Gets or sets the padding value for the right edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the right edge.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.RotatePaddingCounterclockwise(System.Int32)">
            <summary>
                <para>Rotates padding values counterclockwise the specified number of times.
</para>
            </summary>
            <param name="numberOfTimes">
		An integer value which specifies the number of times for padding values to rotate.


            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Top">
            <summary>
                <para>Gets or sets the padding value for the top edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the top edge.
</value>


        </member>
        <member name="T:DevExpress.Utils.FormatInfo">

            <summary>
                <para>Provides formatting settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.FormatInfo.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.FormatInfo"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.#ctor(DevExpress.Utils.IComponentLoading)">
            <summary>
                <para>Initializes a new instance of the FormatInfo class with the specified settings.
</para>
            </summary>
            <param name="componentLoading">
		A DevExpress.Utils.IComponentLoading object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
            <summary>
                <para>Initializes a new instance of the FormatInfo class.
</para>
            </summary>
            <param name="bagOwner">
		An object that implements the IViewBagOwner interface.

            </param>
            <param name="objectPath">
		The string value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.#ctor(DevExpress.Utils.IComponentLoading,DevExpress.WebUtils.IViewBagOwner,System.String)">
            <summary>
                <para>Initializes a new instance of the FormatInfo class with the specified settings.
</para>
            </summary>
            <param name="componentLoading">
		A DevExpress.Utils.IComponentLoading object.

            </param>
            <param name="bagOwner">
		An object that implements the IViewBagOwner interface.

            </param>
            <param name="objectPath">
		The string value.

            </param>


        </member>
        <member name="P:DevExpress.Utils.FormatInfo.AlwaysUseThreadFormat">
            <summary>
                <para>Gets or sets whether a value for the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property should be determined each time the property is accessed.
</para>
            </summary>
            <value><b>true</b> if the value for the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property should be determined each time the property is accessed.
</value>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.Assign(DevExpress.Utils.FormatInfo)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.Utils.FormatInfo"/> object to the current object.
</para>
            </summary>
            <param name="info">
		The <see cref="T:DevExpress.Utils.FormatInfo"/> object whose properties must be copied.

            </param>


        </member>
        <member name="E:DevExpress.Utils.FormatInfo.Changed">
            <summary>
                <para>Occurs on changing properties of the current <see cref="T:DevExpress.Utils.FormatInfo"/> class object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.FormatInfo.Empty">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.FormatInfo"/> object with default settings.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.FormatInfo"/> object with default property values.
</value>


        </member>
        <member name="P:DevExpress.Utils.FormatInfo.Format">
            <summary>
                <para>Gets or sets the <see cref="T:System.IFormatProvider"/> object which specifies how values should be formatted.
</para>
            </summary>
            <value>The <b>IFormatProvider</b> object which specifies how values should be formatted.
</value>


        </member>
        <member name="P:DevExpress.Utils.FormatInfo.FormatString">
            <summary>
                <para>Gets the pattern for formatting values.
</para>
            </summary>
            <value>The string representing the format pattern.
</value>


        </member>
        <member name="P:DevExpress.Utils.FormatInfo.FormatType">
            <summary>
                <para>Gets or sets the type of formatting specified by the current <see cref="T:DevExpress.Utils.FormatInfo"/> object.
</para>
            </summary>
            <value>One of <see cref="T:DevExpress.Utils.FormatType"/> values specifying the formatting type.
</value>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.GetDisplayText(System.Object)">
            <summary>
                <para>Gets the value formatted according to the format pattern and using the format provider settings.
</para>
            </summary>
            <param name="val">
		The value to format.

            </param>
            <returns>The text representation of the specified value according to settings of the current <see cref="T:DevExpress.Utils.FormatInfo"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.GetFormatString">
            <summary>
                <para>Returns the actual format string.
</para>
            </summary>
            <returns>The actual format string.
</returns>


        </member>
        <member name="P:DevExpress.Utils.FormatInfo.IsEmpty">
            <summary>
                <para>Tests whether properties of the current object are set to default values.
</para>
            </summary>
            <value><b>true</b> if the object properties are set to default values; otherwise,<b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.IsEquals(DevExpress.Utils.FormatInfo)">
            <summary>
                <para>Compares properties of the current object with settings of the specified <see cref="T:DevExpress.Utils.FormatInfo"/> object.
</para>
            </summary>
            <param name="info">
		The <see cref="T:DevExpress.Utils.FormatInfo"/> object whose properties are compared.

            </param>
            <returns><b>true</b> if properties of the current object equal to corresponding properties of the <i>info</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.LockParse">
            <summary>
                <para>The method supports the internal .NET infrastructure and you must not call it from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.OnEndDeserializing(System.String)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="restoredVersion">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.OnEndSerializing">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.OnStartDeserializing(DevExpress.Utils.LayoutAllowEventArgs)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="e">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.OnStartSerializing">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.Parse">
            <summary>
                <para>Performs actions when the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property changes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.Reset">
            <summary>
                <para>Reverts properties of the current object to default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.Utils.FormatInfo"/> object should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value that represents the current object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.FormatInfo.UnlockParse">
            <summary>
                <para>The method supports the internal .NET infrastructure and you must not call it from your code.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.FormatType">

            <summary>
                <para>Enumerates values for the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.FormatType.Custom">
            <summary>
                <para>Specifies that you assign a custom <see cref="T:System.IFormatProvider"/> to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property.  Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to <b>Custom</b> does not change the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> and <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> property values.

<para>
If you wish to use your own <see cref="T:System.IFormatProvider"/> to format values, set the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property to <b>Custom</b> and  the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property to the required format provider.
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.FormatType.DateTime">
            <summary>
                <para>Specifies that values should be formatted as the <see cref="T:System.DateTime"/> type.
<para>
Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to <b>DateTime</b> assigns the static <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo"/> format provider to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property. This defines the format provider for the current culture.
Also <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> is set to "d" (short date pattern).
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.FormatType.None">
            <summary>
                <para>No formatting is <b>performed</b>.
<para>
Setting the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property to <b>None</b> clears the <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> property and sets the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> object to <b>null</b>.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.FormatType.Numeric">
            <summary>
                <para>Specifies that values should be formatted as numbers.
<para>
Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to <b>Numeric</b> assigns the static <b>System.Globalization.NumberFormatInfo.CurrentInfo</b> format provider to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property. This defines the format provider for the current culture.

Also <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> is set to an empty string.
</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.BaseStatement">

            <summary>
                <para>Serves as the base class for the classes that represent statements.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the BaseStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A BaseStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current BaseStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesColumns(DevExpress.Xpo.DB.BaseStatement[])">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="statements">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesNames(DevExpress.Xpo.DB.BaseStatement[])">
            <summary>
                <para>Returns the names of the tables that are referenced in the specified statements.

</para>
            </summary>
            <param name="statements">
		An array of <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> descendants that represents statements.

            </param>
            <returns>An array of strings that specify the names of the tables that are referenced in the specified statements.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesNames">
            <summary>
                <para>Returns the names of the tables that are referenced in the statement.

</para>
            </summary>
            <returns>An array of strings that specify the names of the tables that are referenced in the statement.

</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.BaseStatement.Operands">
            <summary>
                <para>The collection of operands.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Services.MouseHandlerServiceWrapper">

            <summary>
                <para>Represents  a base class for custom services used to process mouse events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.#ctor(DevExpress.Services.IMouseHandlerService)">
            <summary>
                <para>Initializes a new instance of the MouseHandlerServiceWrapper class with the specified service.
</para>
            </summary>
            <param name="service">
		An object exposing the <see cref="T:DevExpress.Services.IMouseHandlerService"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse move event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse wheel event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="P:DevExpress.Services.MouseHandlerServiceWrapper.Service">
            <summary>
                <para>Provides access to the service interface of the wrapper.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface of the wrapper.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.Localization.PreviewLocalizer">

            <summary>
                <para>Represents an object providing a means to localize XtraPrinting's user interface elements.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.#ctor">
            <summary>
                <para>Initializes a new instance of the PreviewLocalizer class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraPrinting.Localization.PreviewLocalizer.Active">
            <summary>
                <para>Gets or sets a localizer object providing localization of the XtraPrinting's user interface at runtime.
</para>
            </summary>
            <value>A PreviewLocalizer descendant, which is used to localize the user interface at runtime.
</value>


        </member>
        <member name="E:DevExpress.XtraPrinting.Localization.PreviewLocalizer.ActiveChanged">
            <summary>
                <para>Fires immediately after the <see cref="P:DevExpress.XtraPrinting.Localization.PreviewLocalizer.Active"/> property value has been changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.CreateDefaultLocalizer">
            <summary>
                <para>Returns a Localizer object representing resources based on the the thread's language and regional settings (culture).
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.Localization.PreviewResLocalizer"/> object representing resources based on the thread's culture.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.GetLocalizedString(DevExpress.XtraPrinting.Localization.PreviewStringId)">
            <summary>
                <para>Gets the string, localized by the current PreviewLocalizer, for the specified user interface element.
</para>
            </summary>
            <param name="id">
		A <see cref="T:DevExpress.XtraPrinting.Localization.PreviewStringId"/> enumeration value specifying the UI element whose caption (text) is to be localized.

            </param>
            <returns>A <see cref="T:System.String"/> representing the text to be displayed within the specified UI element.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.GetString(DevExpress.XtraPrinting.Localization.PreviewStringId)">
            <summary>
                <para>Returns a localized string for the given string identifier.
</para>
            </summary>
            <param name="id">
		A <see cref="T:DevExpress.XtraPrinting.Localization.PreviewStringId"/> enumeration value identifying the string to localize.

            </param>
            <returns>A <see cref="T:System.String"/> corresponding to the specified identifier.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.Localization.PreviewLocalizer.Language">
            <summary>
                <para>Gets a value indicating which language is currently used for the XtraPrinting's user interface.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing the language used for the XtraPrinting's user interface.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.RaiseActiveChanged">
            <summary>
                <para>Raises the <see cref="E:DevExpress.XtraPrinting.Localization.PreviewLocalizer.ActiveChanged"/> event.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException">

            <summary>
                <para>An exception that is thrown when a database either cannot be created or opened.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException.#ctor(System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the UnableToOpenDatabaseException class with the specified settings.
</para>
            </summary>
            <param name="connectionString">
		A connection string that is used to connect to the database.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException">

            <summary>
                <para>An exception that is thrown when a specific object cannot be created in a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the UnableToCreateDBObjectException class with the specified settings.
</para>
            </summary>
            <param name="objectTypeName">
		A string that specifies the type of the object that cannot be created.

            </param>
            <param name="objectName">
		A string that specifies the name of the object.

            </param>
            <param name="parentObjectName">
		A string that specifies the name of the object's parent.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
</para>
            </summary>
            <param name="info">
		The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.

            </param>
            <param name="context">
		The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ObjectName">
            <summary>
                <para>Gets the name of the object that cannot be created.
</para>
            </summary>
            <value>The name of the object that cannot be created.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ObjectTypeName">
            <summary>
                <para>Gets the type of the object that cannot be created.
</para>
            </summary>
            <value>A string that specifies the type of the object that cannot be created.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ParentObjectName">
            <summary>
                <para>Gets the name of the parent which contains the object that cannot be created.
</para>
            </summary>
            <value>The name of the parent.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException">

            <summary>
                <para>An exception that is thrown when an unexpected error occurs during the execution of a SQL statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the SqlExecutionErrorException class with the specified settings.
</para>
            </summary>
            <param name="sql">
		A string that specifies the SQL statement that raised the exception.

            </param>
            <param name="parameters">
		A string that specifies the parameters for the SQL statement.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
</para>
            </summary>
            <param name="info">
		The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.

            </param>
            <param name="context">
		The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.Parameters">
            <summary>
                <para>Gets a string that represents the parameters for the current SQL statement.

</para>
            </summary>
            <value>A string that represents the parameters for the SQL statement.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.Sql">
            <summary>
                <para>Gets the SQL statement that raised the exception.
</para>
            </summary>
            <value>A string that specifies the SQL statement which raised the exception.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException">

            <summary>
                <para>An exception that is thrown when the storage schema doesn't match the structure of persistent objects and the schema cannot be modified.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the SchemaCorrectionNeededException class .
</para>
            </summary>
            <param name="sql">
		A SQL statement or the name of the object that raised this exception.


            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.Exception)">
            <summary>
                <para>Initializes a new instance of the SchemaCorrectionNeededException class.
</para>
            </summary>
            <param name="innerException">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the SchemaCorrectionNeededException class.
</para>
            </summary>
            <param name="sql">
		@nbsp;

            </param>
            <param name="innerException">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
</para>
            </summary>
            <param name="info">
		The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.

            </param>
            <param name="context">
		The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.Sql">
            <summary>
                <para>A SQL statement or the name of an object that raised this exception.
</para>
            </summary>
            <value>A SQL statement or the name of an object that raised this exception.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException">

            <summary>
                <para>An exception that is thrown when a connection provider cannot identify the type of column to create a column in a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.#ctor(System.Type)">
            <summary>
                <para>Initializes a new instance of the PropertyTypeMappingMissingException class with the specified settings.
</para>
            </summary>
            <param name="objtype">
		The type of column that cannot be identified.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
</para>
            </summary>
            <param name="info">
		The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.

            </param>
            <param name="context">
		The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.PropertyType">
            <summary>
                <para>Gets the type of column that cannot be identified.
</para>
            </summary>
            <value>The type of column that cannot be identified.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.ISqlDataStore">

            <summary>
                <para>Represents the interface for objects that need to interact with SQL Server databases,
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.ISqlDataStore.Connection">
            <summary>
                <para>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to a data store, if the specified data store allows commands to be created.

</para>
            </summary>
            <value>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to the data store, if the specified data store allows commands to be created.

</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.ISqlDataStore.CreateCommand">
            <summary>
                <para>Creates a command if the data store allows commands to be created.

</para>
            </summary>
            <returns>A <see cref="T:System.Data.IDbCommand"/> command that is executed when connected to a data store.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.UpdateStatement">

            <summary>
                <para>Represents the update statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the UpdateStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A UpdateStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current UpdateStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.UpdateStatement.Parameters">
            <summary>
                <para>Gets the collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SelectStatementResult">

            <summary>
                <para>Represents the result of a single select query to a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(System.Object[])">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class with the specified rows.
</para>
            </summary>
            <param name="testData">
		An array of objects that will be represented as the collection's elements.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class with the specified collection of rows.
</para>
            </summary>
            <param name="rows">
		A collection of rows that will be copied to the collection being created.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(DevExpress.Xpo.DB.SelectStatementResultRow[])">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class with the specified collection of rows.
</para>
            </summary>
            <param name="rows">
		An array of rows that represent the result of a single select query to a data store. Each row contains the values of the queried fields. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.SelectStatementResult.Rows"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.Clone">
            <summary>
                <para>Creates a copy of the current SelectStatementResult instance.
</para>
            </summary>
            <returns>A SelectStatementResult object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatementResult.Rows">
            <summary>
                <para>An array of rows that represent the result of a single select query to a data store. Each row contains the values of the queried fields. To learn more, refer to How to: Access Data in SQL Query Results.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SelectStatement">

            <summary>
                <para>Represents the select statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the SelectStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A SelectStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current SelectStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatement.GroupCondition">
            <summary>
                <para>Specifies the grouping expression that is represented by a <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.SelectStatement.GroupProperties">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> that specifies the columns by which the result of the current SelectStatement should be grouped.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> that specifies the columns by which the result of the current <b>SelectStatement</b> should be grouped.


</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatement.SkipSelectedRecords">
            <summary>
                <para>Specifies the number of records to exclude from the query result.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.SelectStatement.SortProperties">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> collection.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> object that represents the collection of <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> objects.
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatement.TopSelectedRecords">
            <summary>
                <para>Specifies the maximum number of selected records.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current SelectStatement object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SelectedData">

            <summary>
                <para>Represents the result of batch select queries made to a data store. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SelectedData.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectedData"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectedData.#ctor(DevExpress.Xpo.DB.SelectStatementResult[])">
            <summary>
                <para>Initializes a new instance of the SelectedData class with the specified settings.
</para>
            </summary>
            <param name="resultSet">
		An array of <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> objects that represent the result of select operations.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectedData.ResultSet">
            <summary>
                <para>The results of select query statements. To learn more, refer to How to: Access Data in SQL Query Results.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ModificationStatement">

            <summary>
                <para>Serves as the base class for classes that represent modification statements.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the ModificationStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ModificationStatement"/> class.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.ModificationStatement.RecordsAffected">
            <summary>
                <para>Specifies the number of records to be modified.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationStatement.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current ModificationStatement object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ModificationResult">

            <summary>
                <para>Represents the result of an update operation on a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ModificationResult"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor(DevExpress.Xpo.DB.ParameterValue[])">
            <summary>
                <para>Initializes a new instance of the ModificationResult class.
</para>
            </summary>
            <param name="identities">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor(System.Collections.Generic.List`1)">
            <summary>
                <para>Initializes a new instance of the ModificationResult class.
</para>
            </summary>
            <param name="identities">
		@nbsp;

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.ModificationResult.Identities">
            <summary>
                <para>An array of identifiers.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.InsertStatement">

            <summary>
                <para>Represents the insert statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the InsertStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InsertStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A InsertStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current InsertStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityColumn">
            <summary>
                <para>Specifies the name of an identity column in a table.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityParameter">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.InsertStatement.Parameters">
            <summary>
                <para>Gets the collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DeleteStatement">

            <summary>
                <para>Represents the delete statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the DeleteStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A DeleteStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current DeleteStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataStoreLogger">

            <summary>
                <para>Enables operations performed by a specific <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object to be logged.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreLogger.#ctor(DevExpress.Xpo.DB.IDataStore,System.IO.TextWriter)">
            <summary>
                <para>Initializes a new instance of the DataStoreLogger class with the specified settings.
</para>
            </summary>
            <param name="nestedProvider">
		A <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object that represents a tracked data store.

            </param>
            <param name="logWriter">
		A <see cref="T:System.IO.TextWriter"/> object that will log data-aware operations performed on the tracked data store

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataStoreLogger.LogWriter">
            <summary>
                <para>Gets a writer that logs the data-aware operations performed on the tracked data store.

</para>
            </summary>
            <value>A <see cref="T:System.IO.TextWriter"/> object that logs the data-aware operations performed on the tracked data store

</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.IDataStore">

            <summary>
                <para>The interface for objects that need to interact with a data store.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption">
            <summary>
                <para>When implemented by a class, returns which operations are performed when a data store is accessed for the first time.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when a data store is accessed for the first time.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.IDataStore.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>Updates data in a data store using the specified modification statements.
</para>
            </summary>
            <param name="dmlStatements">
		An array of data modification statements.

            </param>
            <returns>The result of the data modifications.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.IDataStore.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>When implemented by a class, fetches data from a data store using the specified query statements.
</para>
            </summary>
            <param name="selects">
		An array of statements to obtain data from the data store.

            </param>
            <returns>Data retrieved from the data store.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.IDataStore.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para>When implemented by a class, updates the storage schema according to the specified class descriptions.
</para>
            </summary>
            <param name="dontCreateIfFirstTableNotExist">
		<b>true</b> if the schema should not be created if the table that corresponds to the first item in the <i>tables</i> array doesn't exist in the data store.

            </param>
            <param name="tables">
		An array of tables whose structure should be saved in the data store.

            </param>
            <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.

</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICriteriaVisitor">

            <summary>
                <para>For internal use only.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.UnaryOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.BinaryOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.BetweenOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.InOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.FunctionOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.OperandValue)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperand">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.GroupOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.JoinOperand">

            <summary>
                <para>An operator that joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="joinTypeName">
		A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor">
            <summary>
                <para>Initializes a new instance of the JoinOperand class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="joinTypeName">
		A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.AggregateType"/> property.

            </param>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.AggregatedExpression"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.AggregatedExpression">
            <summary>
                <para>Gets or sets the aggregated expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the aggregated expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.AggregateType">
            <summary>
                <para>Gets or sets the type of the aggregate operator.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Avg(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Clone">
            <summary>
                <para>Creates a copy of the current JoinOperand instance.
</para>
            </summary>
            <returns>An JoinOperand object that represents an exact copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.Condition">
            <summary>
                <para>Gets or sets the filter criteria applied to the property values of the objects being joined.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic), if the filter criteria isn't needed.

</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Count(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Count">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An JoinOperand object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Exists">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Exists(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current JoinOperand object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName">
            <summary>
                <para>Gets or sets the type name of persistent objects being joined with parent objects.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the type name of persistent objects that provide data for joining. The value is case-sensitive.

</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Max(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Min(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Sum(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Schedule.HolidayBaseCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Schedule.Holiday"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.HolidayBaseCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the HolidayBaseCollection class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.SortingColumn">

            <summary>
                <para>Represents a sorting column in a query.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor(System.String,System.String,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with the specified settings.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the name of the sorted column in a query.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in the query.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Direction"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with the specified property and sort direction.
</para>
            </summary>
            <param name="property">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant representing the query operand that identifies the sorted column in a query. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Property"/> property.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Direction"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpo.DB.SortingColumn.Direction">
            <summary>
                <para>Gets or sets the column's sort order.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column's sort order.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A SortingColumn object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current SortingColumn object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.SortingColumn.Property">
            <summary>
                <para>Gets or set the query operand that identifies the sorted column in a query.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant representing the query operand that identifies the sorted column in a query.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.QuerySortingCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QuerySortingCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QuerySortingCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.QueryParameterCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.#ctor(DevExpress.Data.Filtering.OperandValue[])">
            <summary>
                <para>Initializes and populates a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> class.
</para>
            </summary>
            <param name="parameters">
		An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects that are added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QueryParameterCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QueryParameterCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.QueryOperandCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperandCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QueryOperandCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QueryOperandCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.QueryOperand">

            <summary>
                <para>Represents a query operand.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified column name and alias name.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the column's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> field.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(DevExpress.Xpo.DB.DBColumn,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified column and alias name.
</para>
            </summary>
            <param name="column">
		A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object representing the column that the query operand corresponds to. The name of this column is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> property.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(System.String,System.String,DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Initializes a new instance of the QueryOperand class with the specified settings.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the column's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> field.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.

            </param>
            <param name="columnType">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Clone">
            <summary>
                <para>Creates a copy of the current QueryOperand instance.
</para>
            </summary>
            <returns>A QueryOperand object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.QueryOperand.ColumnName">
            <summary>
                <para>Specifies the column's name
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.QueryOperand.ColumnType">
            <summary>
                <para>The column type.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QueryOperand object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QueryOperand object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias">
            <summary>
                <para>Specifies the alias name of the table in a query.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.JoinNodeCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.JoinNode"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A JoinNodeCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current JoinNodeCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current JoinNodeCollection object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.JoinNode">

            <summary>
                <para>Serves as a base for the <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNode"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.#ctor(DevExpress.Xpo.DB.DBTable,System.String,DevExpress.Xpo.DB.JoinType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNode"/> class with default settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represent the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Xpo.DB.JoinType"/> enumeration value that specifies the join's type. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Type"/> property.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Alias">
            <summary>
                <para>A <see cref="T:System.String"/> value that identifies the table.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Condition">
            <summary>
                <para>Specifies the criteria expression.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A JoinNode object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.GetColumn(System.String)">
            <summary>
                <para>Returns the column with the specified name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that specifies the column's name.

            </param>
            <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the table column.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current JoinNode object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.SubNodes">
            <summary>
                <para>Provides access to the collection of sub nodes that is represented by a <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> object.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.TableName">
            <summary>
                <para>Specifies the table's name. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current JoinNode object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Type">
            <summary>
                <para>A <see cref="T:DevExpress.Xpo.DB.JoinType"/> enumeration value that specifies the join's type.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBTableMultiColumnGadget">

            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns">
            <summary>
                <para>A collection of strings that specify the columns that function as primary keys for a table. This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name">
            <summary>
                <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBTable">

            <summary>
                <para>Represents a table that stores a persistent object's data.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> class with the specified name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that specifies the table's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTable.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.AddColumn(DevExpress.Xpo.DB.DBColumn)">
            <summary>
                <para>Appends a column to the <see cref="P:DevExpress.Xpo.DB.DBTable.Columns"/> collection.
</para>
            </summary>
            <param name="column">
		A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the column to be added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.AddForeignKey(DevExpress.Xpo.DB.DBForeignKey)">
            <summary>
                <para>Appends a <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to the <see cref="P:DevExpress.Xpo.DB.DBTable.ForeignKeys"/> collection.
</para>
            </summary>
            <param name="fk">
		A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to be added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.AddIndex(DevExpress.Xpo.DB.DBIndex)">
            <summary>
                <para>Appends a <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to the <see cref="P:DevExpress.Xpo.DB.DBTable.Indexes"/> collection.
</para>
            </summary>
            <param name="index">
		A <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to be added to the collection.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBTable.Columns">
            <summary>
                <para>Provedes access to the current DBTable's column collection.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpo.DB.DBColumn"/> objects that represent the columns defined in the current <b>DBTable</b>.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A DBTable object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBTable.ForeignKeys">
            <summary>
                <para>Provedes access to the current DBTable's foreign keys collection.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> objects that represent the foreign keys defined in the current <b>DBTable</b>.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.GetColumn(System.String)">
            <summary>
                <para>Creates a new column with the specified name and appends it to the <see cref="P:DevExpress.Xpo.DB.DBTable.Columns"/> collection.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the column's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBColumn.Name"/> property.

            </param>
            <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the new column.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current DBTable object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBTable.Indexes">
            <summary>
                <para>Provedes access to the current DBTable's indexes collection.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpo.DB.DBIndex"/> objects that represent the indexes defined for the current <b>DBTable</b>.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.IsForeignKeyIncluded(DevExpress.Xpo.DB.DBForeignKey)">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.Xpo.DB.DBTable.ForeignKeys"/> collection contains the specified <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object.
</para>
            </summary>
            <param name="fk">
		A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to locate in the collection.

            </param>
            <returns><b>true</b> if the collection contains the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.IsIndexIncluded(DevExpress.Xpo.DB.DBIndex)">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.Xpo.DB.DBTable.Indexes"/> collection contains the specified <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object.
</para>
            </summary>
            <param name="index">
		A <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to locate in the collection.

            </param>
            <returns><b>true</b> if the collection contains the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTable.IsView">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTable.Name">
            <summary>
                <para>Specifies the table's name.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value that specifies the table's name.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTable.PrimaryKey">
            <summary>
                <para>Specifies a <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> object that represents a primary keys for the table. The primary key must be unique to identify the record in the table. It's also possible to have a table with a primary key made up of two or more columns.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBPrimaryKey">

            <summary>
                <para>Represents the primary key for a table.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor(System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with the specified columns that function as primary keys for a table.
</para>
            </summary>
            <param name="columns">
		A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor(System.String,System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with the specified name and columns that function as primary keys for a table.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name"/> property.

            </param>
            <param name="columns">
		A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBIndex">

            <summary>
                <para>Represents an index for a table.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor(System.String,System.Collections.ICollection,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with the specified settings.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name"/> property.

            </param>
            <param name="columns">
		A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>
            <param name="isUnique">
		<b>true</b> if the index must be unique; otherwise, <b>false</b>. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBIndex.IsUnique"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor(System.Collections.ICollection,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with the specified settings.
</para>
            </summary>
            <param name="columns">
		A collection of strings that identify the columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>
            <param name="isUnique">
		<b>true</b> if the index must be unique; otherwise, <b>false</b>. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBIndex.IsUnique"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBIndex.IsUnique">
            <summary>
                <para><b>true</b> if the index must be unique; otherwise, <b>false</b>. If the <b>IsUnique</b> field is set to <b>true</b>, an exception will be thrown when assigning an index that isn't unique.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBForeignKey">

            <summary>
                <para>Represents the foreign key for a table.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBForeignKey.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBForeignKey.#ctor(System.Collections.ICollection,System.String,System.Collections.Specialized.StringCollection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> class with the specified settings.
</para>
            </summary>
            <param name="columns">
		A collection of strings that specify the names of columns that function as foreign keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.

            </param>
            <param name="primaryKeyTable">
		A <see cref="T:System.String"/> value that specifies the name of a primary key table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTable"/> field.

            </param>
            <param name="primaryKeyTableKeyColumns">
		A collection of strings that specify the names of columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTableKeyColumns"/> field.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTable">
            <summary>
                <para>Specifies the name of a primary key table.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTableKeyColumns">
            <summary>
                <para>A collection of strings that specify the names of columns that function as primary keys for a table.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBColumn">

            <summary>
                <para>Represents the schema of a column in a <see cref="T:DevExpress.Xpo.DB.DBTable"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBColumn"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor(System.String,System.Boolean,System.String,System.Int32,DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Initializes a new instance of the DBColumn class with the specified settings.
</para>
            </summary>
            <param name="name">
		@nbsp;

            </param>
            <param name="isKey">
		@nbsp;

            </param>
            <param name="dBTypeName">
		@nbsp;

            </param>
            <param name="size">
		@nbsp;

            </param>
            <param name="type">
		@nbsp;

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.ColumnType">
            <summary>
                <para>Specifies the column's type.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.DBTypeName">
            <summary>
                <para>Specifies the name of the column data type.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.GetColumnType(System.Type)">
            <summary>
                <para>Gets the column type of the specified runtime type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object that represents the exact runtime type.

            </param>
            <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value that corresponds to the specified runtime type.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.GetColumnType(System.Type,System.Boolean)">
            <summary>
                <para>Gets the column type of the specified runtime type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object that represents the exact runtime type.

            </param>
            <param name="supressExceptionOnUnknown">
		<b>true</b> to return the <b>DBColumnType.Unknown</b> value if the specified type cannot be identified; <b>false</b> to raise the <see cref="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException"/> exception.

            </param>
            <returns>A <b>DevExpress.Xpo.DB.DBColumnType</b> enumeration value that corresponds to the specified runtime type.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.GetType(DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Gets the runtime type of the specified column type.
</para>
            </summary>
            <param name="type">
		One of the <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration values.

            </param>
            <returns>A <see cref="T:System.Type"/> object that represents the exact runtime type of the specified column type.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.IsIdentity">
            <summary>
                <para><b>true</b> if the value of the column increments automatically; otherwise, <b>false</b>. The default value is <b>false</b>.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.IsKey">
            <summary>
                <para><b>true</b> if the column is the key column; otherwise, <b>false</b>.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.IsStorableType(DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Indicates whether values of the specified column type can be saved to a database.
</para>
            </summary>
            <param name="type">
		One of the <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration values.

            </param>
            <returns><b>true</b> if values of the specified column type can be saved to a database; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.IsStorableType(System.Type)">
            <summary>
                <para>Indicates whether values of the specified runtime type can be saved to a database.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object that represents the exact runtime type.

            </param>
            <returns><b>true</b> if values of the specified type can be saved to a database; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.Name">
            <summary>
                <para>Specifies the column's name.
</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.Size">
            <summary>
                <para>The maximum length of a text column. This is ignored for non-text columns.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.CriteriaOperatorCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the CriteriaOperatorCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A CriteriaOperatorCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current CriteriaOperatorCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current CriteriaOperatorCollection object.
</returns>


        </member>
        <member name="T:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter">

            <summary>
                <para>When implemented, specifies a converter used to serialize/deserialize arbitrary objects in a custom manner.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.CanConvert(System.Type)">
            <summary>
                <para>When implemented, returns whether the converter can serialize/deserialize objects of the specified type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> that specifies the type to check.

            </param>
            <returns><b>true</b> if the converter can serialize/deserialize objects of the specified type; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.FromString(System.Type,System.String)">
            <summary>
                <para>When implemented, deserializes an object of the specified type from the specified string.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> that specifies the type of object to deserialize.

            </param>
            <param name="str">
		A <see cref="T:System.String"/> that represents the serialized object.

            </param>
            <returns>A deserialized object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.GetType(System.String)">
            <summary>
                <para>When implemented, returns the type by its full name.
</para>
            </summary>
            <param name="typeName">
		A <see cref="T:System.String"/> that specifies the full name of the type to return.

            </param>
            <returns>A <see cref="T:System.Type"/> that identifies the type whose full name is specified by the <i>typeName</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.ToString(System.Type,System.Object)">
            <summary>
                <para>When implemented, serializes the specified object of the specified type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> that specifies the type of the object to serialize.

            </param>
            <param name="obj">
		The object to serialize.

            </param>
            <returns>A <see cref="T:System.String"/> that represents the serialized object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.UpdateSchemaResult">

            <summary>
                <para>Lists the values that specify the result of the data store schema update operation.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.UpdateSchemaResult.FirstTableNotExists">
            <summary>
                <para>Indicates that the table that corresponds to the first item doesn't exist in the data store.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.UpdateSchemaResult.SchemaExists">
            <summary>
                <para>Indicates that the database schema exists.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.SortingDirection">

            <summary>
                <para>Lists the values that specify the sort order.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.SortingDirection.Ascending">
            <summary>
                <para>A property (column) is sorted in ascending order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.SortingDirection.Descending">
            <summary>
                <para>A property (column) is sorted in descending order.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.JoinType">

            <summary>
                <para>Lists the values that specify the join type.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.JoinType.Inner">
            <summary>
                <para>Represents an inner join. Inner joins (also known as equijoins) are used to combine information from two or more tables.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinType.LeftOuter">
            <summary>
                <para>Includes all the records in which the linked field value in both tables is an exact match and every record in the primary for which there is no match.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.AutoCreateOption">

            <summary>
                <para>Lists the values that specify the action which is performed when a session is connected to a data store.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.DatabaseAndSchema">
            <summary>
                <para>A session will try to automatically create the database if it doesn't exist. It will also create or update the database schema for any persistent objects currently being used.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.None">
            <summary>
                <para>A session will not automatically create the database or update database schema.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaAlreadyExists">
            <summary>
                <para>A session will never update the database schema.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaOnly">
            <summary>
                <para>A session will automatically create or update the database schema for the persistent objects currently being used. If the database doesn't exist, it won't be created by a session.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException">

            <summary>
                <para>An exception that is thrown when a specific property that is used in a specific expression cannot be resolved.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the InvalidPropertyPathException class.
</para>
            </summary>
            <param name="messageText">
		A string that specifies the error description.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
</para>
            </summary>
            <param name="info">
		The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.

            </param>
            <param name="context">
		The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.

            </param>


        </member>
        <member name="T:DevExpress.Data.Filtering.Exceptions.CriteriaParserException">

            <summary>
                <para>An exception that is thrown when a string that represents criteria cannot be parsed.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the CriteriaParserException class.
</para>
            </summary>
            <param name="explanation">
		A string that specifies the error description.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
                <para>Initializes a new instance of the CriteriaParserException class.
</para>
            </summary>
            <param name="explanation">
		A string that specifies the error description.

            </param>
            <param name="line">
		A value of the <b>CriteriaLexer.Line</b> property that specifies the line where an exception occured. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Line"/> property.

            </param>
            <param name="column">
		A value of the <b>CriteriaLexer.Col</b> property that specifies the column where an exception occured. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Column"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Column">
            <summary>
                <para>The value of the <b>CriteriaLexer.Col</b> property that specifies the column where an exception occured.
</para>
            </summary>
            <value>The value of the <b>CriteriaLexer.Col</b> property that specifies the column where an exception occured.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                <para>Sets the <b>System.Runtime.Serialization.SerializationInfo</b> with information about the exception. 
</para>
            </summary>
            <param name="info">
		The <b>System.Runtime.Serialization.SerializationInfo</b> that holds the serialized object data about the exception being thrown. 

            </param>
            <param name="context">
		The <b>System.Runtime.Serialization.StreamingContext</b> that contains contextual information about the source or destination. 

            </param>


        </member>
        <member name="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Line">
            <summary>
                <para>A value of the <b>CriteriaLexer.Line</b> property that specifies the line where an exception occured.
</para>
            </summary>
            <value>A value of the <b>CriteriaLexer.Line</b> property that specifies the line where an exception occured.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.IClientCriteriaVisitor">

            <summary>
                <para>For internal use only.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.AggregateOperand)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperand">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.OperandProperty)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="theOperand">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.JoinOperand)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="theOperand">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.UnaryOperator">

            <summary>
                <para>An unary operator which performs an operation on only one expression.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor(DevExpress.Data.Filtering.UnaryOperatorType,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with the specified operand and operator type.
</para>
            </summary>
            <param name="operatorType">
		A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> enumeration value which specifies the type of the unary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType"/> property.

            </param>
            <param name="operand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.Operand"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor(DevExpress.Data.Filtering.UnaryOperatorType,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with the specified settings.
</para>
            </summary>
            <param name="operatorType">
		A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> enumeration value which specifies the type of the unary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType"/> property.

            </param>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the property's name.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Clone">
            <summary>
                <para>Creates a copy of the current UnaryOperator instance.
</para>
            </summary>
            <returns>A UnaryOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An UnaryOperator object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current UnaryOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperator.Operand">
            <summary>
                <para>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the operand.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType">
            <summary>
                <para>An <see cref="T:DevExpress.Data.Filtering.UnaryOperatorType"/> enumeration value which specifies the type of the unary operator.

</para>
            </summary>
            <returns>
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.OperandValue">

            <summary>
                <para>A value operand in criteria expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandValue"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandValue"/> class with the specified value.
</para>
            </summary>
            <param name="value">
		The value for the operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.OperandValue.Value"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Clone">
            <summary>
                <para>Creates a copy of the current OperandValue instance.
</para>
            </summary>
            <returns>An OperandValue object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An OperandValue object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current OperandValue object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandValue.Value">
            <summary>
                <para>Gets or sets a value for the operand.
</para>
            </summary>
            <value>The value for the operand.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandValue.XmlValue">
            <summary>
                <para>Gets or sets the current operand's formatted value.
</para>
            </summary>
            <value>An object that represents the current operand's formatted value.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.OperandProperty">

            <summary>
                <para>An object property operand in criteria expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> class with the specified property name.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value that specifies the name of the property. It can be a path through object relationships (e.g.  "Employer.DefaultAddress.City"). This value is case-sensitive. and will be assigned to the <see cref="P:DevExpress.Data.Filtering.OperandProperty.PropertyName"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Clone">
            <summary>
                <para>Creates a copy of the current OperandProperty instance.
</para>
            </summary>
            <returns>An OperandProperty object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An OperandProperty object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current OperandProperty object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandProperty.Item(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.


</para>
            </summary>
            <param name="condition">
		@nbsp;

            </param>
            <value>@nbsp;
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandProperty.PropertyName">
            <summary>
                <para>Gets or sets a property name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the name of the property. It can be a path through object relationships (e.g.  "Employer.DefaultAddress.City"). This value is case-sensitive.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.NullOperator">

            <summary>
                <para>Represents an operator which compares a persistent object's property value with a <b>null</b> reference (<b>Nothing</b> in Visual Basic).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with the specified property name.
</para>
            </summary>
            <param name="operand">
		A <see cref="T:System.String"/> value which specifies the name of the property to check for <b>null</b> (<b>Nothing</b> in Visual Basic).

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with the specified criteria operand.
</para>
            </summary>
            <param name="operand">
		An <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the criteria expression.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.NotOperator">

            <summary>
                <para>Represents a logical NOT operation which is performed on the operand.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.NotOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NotOperator"/> class with the specified operand.
</para>
            </summary>
            <param name="operand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the operand that the logical inversion is applied to.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.NotOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NotOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.InOperator">

            <summary>
                <para>An operator which determines if a value matches any value in a specified list.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(System.String,System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the property name.

            </param>
            <param name="values">
		A collection of expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="leftOperand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="leftOperand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.

            </param>
            <param name="operands">
		An array of objects that represent expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the property name.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Clone">
            <summary>
                <para>Creates a copy of the current InOperator instance.
</para>
            </summary>
            <returns>An InOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An InOperator object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current InOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.InOperator.LeftOperand">
            <summary>
                <para>Gets or sets the expression which is tested to see if it matches any value in the <see cref="P:DevExpress.Data.Filtering.InOperator.Operands"/> list.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.InOperator.Operands">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current InOperator.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current InOperator.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.GroupOperator">

            <summary>
                <para>A logical expression which groups two or more operands with a logical AND or OR.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with the specified settings.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.GroupOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.GroupOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with the specified operands.
</para>
            </summary>
            <param name="operands">
		An array of the <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> objects that represent operands. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.GroupOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the GroupOperator with the specified parameters.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.GroupOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An object that implements the <b>IEnumerable</b> interface and represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects which specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Clone">
            <summary>
                <para>Creates a copy of the current GroupOperator instance.
</para>
            </summary>
            <returns>A GroupOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical AND or OR.
</para>
            </summary>
            <param name="opType">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.

            </param>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.

            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND or OR.
</para>
            </summary>
            <param name="opType">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND or OR.
</para>
            </summary>
            <param name="opType">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.

            </param>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A GroupOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current GroupOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.GroupOperator.Operands">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current GroupOperator.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current GroupOperator.
</value>


        </member>
        <member name="F:DevExpress.Data.Filtering.GroupOperator.OperatorType">
            <summary>
                <para>Specifies the type of the group operator. The available types are enumerated in the <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.FunctionOperator">

            <summary>
                <para>A function operator based on a <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(DevExpress.Data.Filtering.FunctionOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with default settings.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> value that specifies the type of function. This value is used to initialize the <see cref="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class.
</para>
            </summary>
            <param name="customFunctionName">
		@nbsp;

            </param>
            <param name="operands">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(DevExpress.Data.Filtering.FunctionOperatorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with the specified parameters.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> enumeration value that specifies the type of function. This value is used to initialize the <see cref="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An object that implements the <b>IEnumerable</b> interface and represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects which specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(System.String,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with the specified settings.
</para>
            </summary>
            <param name="customFunctionName">
		A <see cref="T:System.String"/> value, specifying the name of the custom function.

            </param>
            <param name="operands">
		A collection of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Clone">
            <summary>
                <para>Creates a copy of the current FunctionOperator instance.
</para>
            </summary>
            <returns>A FunctionOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A FunctionOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current FunctionOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.FunctionOperator.Operands">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current FunctionOperator.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current FunctionOperator.
</value>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType">
            <summary>
                <para>Represents the function type. 
<para>
The operands are specified by the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property and these can be initialized in the constructor. Each operand represents an instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class descendant, the number of operands depends on the function type.
</para>
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> value that specify the function type.
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.CriteriaOperator">

            <summary>
                <para>Provides the abstract (<b>MustInherit</b> in Visual Basic) base class for criteria operators.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical AND.
</para>
            </summary>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.

            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND.
</para>
            </summary>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND.
</para>
            </summary>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.OperandProperty)">
            <summary>
                <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.
</para>
            </summary>
            <param name="origin">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object to clone.

            </param>
            <returns>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents an exact copy of the specified object. <b>null</b> (<b>Nothing</b> in Visual Basic) if the specified object is a null reference.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.
</para>
            </summary>
            <param name="origin">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object to clone.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents an exact copy of the specified object. <b>null</b> (<b>Nothing</b> in Visual Basic) if the specified object is null reference.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.CriteriaOperator.CustomFunctionCount">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunction(System.String)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="functionName">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current CriteriaOperator object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNotNull">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNull">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString">
            <summary>
                <para>Returns the string representation of the criterion defined by the current CriteriaOperator.
</para>
            </summary>
            <returns>A string representation of the criterion defined by the current <b>CriteriaOperator</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the string representation of the criterion defined by the specified CriteriaOperator.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the criterion to convert to its string representation.

            </param>
            <returns>A string representation of the criterion defined by the specified CriteriaOperator.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Not">
            <summary>
                <para>Returns an instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current CriteriaOperator represents.
</para>
            </summary>
            <returns>An instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current CriteriaOperator represents.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical OR.
</para>
            </summary>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical OR.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical OR.
</para>
            </summary>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.

            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands with logical OR.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical OR.
</para>
            </summary>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical OR.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,System.Object[])">
            <summary>
                <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:System.String"/> value, that is the expression to convert.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.
</para>
            </summary>
            <param name="stringCriteria">
		A <see cref="T:System.String"/> value, that is the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.

</para>
            </summary>
            <param name="criteriaList">
		A <see cref="T:System.String"/> value that represents the expressions to convert. The expressions are divided by a semicolon.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in <i>criteriaList</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,System.Object[])">
            <summary>
                <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.

</para>
            </summary>
            <param name="criteriaList">
		A <see cref="T:System.String"/> value that represents the expressions to convert. The expressions are divided by a semicolon.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in <i>criteriaList</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="customFunction">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="customFunctions">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by a question mark character in the result string.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in C# style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by a question mark character in the result string.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in C# style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString">
            <summary>
                <para>Converts the current expression into its VB equivalent string.

</para>
            </summary>
            <returns>A string representation of this expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by question mark character in the result string.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.TryParse(System.String,System.Object[])">
            <summary>
                <para>Tries to convert the specified string representation of an expression to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:System.String"/> value that represents the expression to convert.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="customFunction">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(System.String)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="functionName">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ContainsOperator">

            <summary>
                <para>An operator which checks if a collection contains at least one object matching a specific criteria.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with the specified property and criteria expression.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which identifies the property whose values will be searched.


            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents a search criteria.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor(DevExpress.Data.Filtering.OperandProperty,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with the specified property operand and criteria expression.
</para>
            </summary>
            <param name="collectionProperty">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the property operand in the criteria expression.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the search criteria.


            </param>


        </member>
        <member name="T:DevExpress.Data.Filtering.BinaryOperator">

            <summary>
                <para>A logical expression which consists of a <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> operation between two operands.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified left and right operands and binary operator type.
</para>
            </summary>
            <param name="opLeft">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the first operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BinaryOperator.LeftOperand"/> property.

            </param>
            <param name="opRight">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the second operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BinaryOperator.RightOperand"/> property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the BinaryOperator class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		An <see cref="T:System.Object"/> value to compare with the values of the specified property.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Object,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of the binary operator.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.


            </param>
            <param name="value">
		An <see cref="T:System.Object"/> value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Double)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to <see cref="T:System.Double"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Single)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to <see cref="T:System.String"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int32)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to integer values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Decimal)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Decimal"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Boolean"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Byte"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Char)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Char"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.DateTime)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.DateTime"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.TimeSpan"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte[])">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to an array of <see cref="T:System.Byte"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		An array of <see cref="T:System.Byte"/> values to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.String"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int64)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Int64"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int16)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Int16"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Guid)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Guid"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Double,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Double"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Single,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of the binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Single"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int32,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified integer value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Decimal,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Decimal"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Boolean,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Boolean"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Byte"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Char,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Char"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.DateTime,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.DateTime"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.TimeSpan"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte[],DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Byte"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		An array of <see cref="T:System.Byte"/> values to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.String,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.String"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int64,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Int64"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int16,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Int16"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Guid,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Guid"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Clone">
            <summary>
                <para>Creates a copy of the current BinaryOperator instance.
</para>
            </summary>
            <returns>A BinaryOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A BinaryOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current BinaryOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperator.LeftOperand">
            <summary>
                <para>The left operand.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType">
            <summary>
                <para>Gets the type of the binary operator.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator.
</returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperator.RightOperand">
            <summary>
                <para>The right operand.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.BetweenOperator">

            <summary>
                <para>An operator which determines whether a criteria expression lies between the specified range of values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(System.String,System.Object,System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property name and the specified range of values.
</para>
            </summary>
            <param name="testPropertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are tested.

            </param>
            <param name="beginValue">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression"/> property.

            </param>
            <param name="endValue">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property and the specified range of values.
</para>
            </summary>
            <param name="testPropertyName">
		A <see cref="T:System.String"/> value which identifies the property whose values are tested.

            </param>
            <param name="beginExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression"/> property.

            </param>
            <param name="endExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property and the specified range of values.
</para>
            </summary>
            <param name="testExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression that identifies the property whose values are tested.

            </param>
            <param name="beginExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.LeftOperand"/> property.

            </param>
            <param name="endExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.RightOperand"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression">
            <summary>
                <para>Gets the expression for the first operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Clone">
            <summary>
                <para>Creates a copy of the current BetweenOperator instance.
</para>
            </summary>
            <returns>A BetweenOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression">
            <summary>
                <para>Gets the expression for the second operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.

</para>
            </summary>
            <param name="obj">
		A BetweenOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current BetweenOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.LeftOperand">
            <summary>
                <para>Gets the expression for the first (left) operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.Property">
            <summary>
                <para>Gets or sets the test expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the test expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.RightOperand">
            <summary>
                <para>Gets the expression for the second (right) operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.TestExpression">
            <summary>
                <para>Gets or sets the test expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the test expression.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.AggregateOperand">

            <summary>
                <para>An aggregate operator which calculates aggregate expressions (MIN, MAX, SUM, etc.)
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example "Employer.Addresses".


            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property. It can be represented by a path through object relationships, for example "Employer.Addresses".

            </param>
            <param name="aggregatedExpression">
		A <see cref="T:System.String"/> value which specifies the name of the persistent property of the object from the <i>property</i> collection.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(DevExpress.Data.Filtering.OperandProperty,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="collectionProperty">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the collection property. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> property.

            </param>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression"/> property.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,DevExpress.Data.Filtering.Aggregate)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified collection property and operator type.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example "Employer.Addresses".


            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.Aggregate)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example "Employer.Addresses".



            </param>
            <param name="aggregatedExpression">
		A <see cref="T:System.String"/> value which specifies the name of the persistent property of the object from the <i>property</i> collection.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>Invokes an appropriate overload of the visitor's Visit method.
</para>
            </summary>
            <param name="visitor">
		A visitor that implements the <see cref="T:DevExpress.Data.Filtering.ICriteriaVisitor"/> interface.

            </param>
            <returns>An object returned by the specified visitor's Visit method.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression">
            <summary>
                <para>Gets or sets the aggregated expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType">
            <summary>
                <para>Gets or sets the type of the aggregate operator.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Avg(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.


</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Clone">
            <summary>
                <para>Creates a copy of the current AggregateOperand instance.
</para>
            </summary>
            <returns>An AggregateOperand object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty">
            <summary>
                <para>Gets or sets a collection property whose elements are used to calculate an aggregate expression.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the collection property.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.Condition">
            <summary>
                <para>Gets or sets the filter criteria which is applied to <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> values.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Count">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns> 

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Count(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An AggregateOperand object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Exists(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Exists">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current AggregateOperand object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.IsTopLevel">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value><b>true</b> if the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> is <b>null</b> reference; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Max(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.


</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Min(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Sum(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.


</para>
            </summary>
            <param name="aggregatedExpression">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.UnaryOperatorType">

            <summary>
                <para>Enumerates unary operator types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.BitwiseNot">
            <summary>
                <para>Represents the bitwise NOT operator.

<para>
To create the <b>bitwise NOT</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("~Field1")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.IsNull">
            <summary>
                <para>Represents the operator which determines whether or not a given expression is NULL.

<para>
To create the is-null operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 IS NULL")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Minus">
            <summary>
                <para>Represents the unary negation (-) operator.

<para>
To create the unary negation operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("-Field1 = -10")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Not">
            <summary>
                <para>Represents the logical NOT.

<para>
To create the <b>logical NOT</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("NOT ((Field1 = A) OR (Field1 = B))")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Plus">
            <summary>
                <para>Represents the unary plus (+) operator.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.GroupOperatorType">

            <summary>
                <para>Enumerates group operator types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.GroupOperatorType.And">
            <summary>
                <para>Groups operands with logical AND.
<para>
To create the <b>logical AND</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 @gt; 100 AND Field2 @lt; 150")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.GroupOperatorType.Or">
            <summary>
                <para>Groups operands with logical OR.
<para>
To create the <b>logical OR</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>
<b>CriteriaOperator.Parse("Field1 @gt; 100 OR Field2 @lt; 150")</b>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.FunctionOperatorType">

            <summary>
                <para>Enumerates function types that can be used by the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> operators.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Abs">
            <summary>
                <para>Returns the absolute value of a specified numeric operand.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Abs</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Abs(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Acos">
            <summary>
                <para>Returns the angle (in radians) whose cosine is a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Acos</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Acos(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddDays">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of days from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in days) from the original date. This number can be negative or positive. Its decimal part is part of a day.</para>

<para>To create the <b>AddDays</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddDays(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddHours">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of hours from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in hours) from the original date. This number can be negative or positive. Its decimal part is part of an hour.</para>

<para>To create the <b>AddHours</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddHours(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMilliSeconds">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of milliseconds from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in milliseconds) from the original date. This number can be negative or positive. Its decimal part is part of a millisecond.</para>

<para>To create the <b>AddMilliSeconds</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddMilliseconds(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMinutes">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of minutes from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in minutes) from the original date. This number can be negative or positive. Its decimal part is part of a minute.</para>

<para>To create the <b>AddMinutes</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddMinutes(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMonths">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of months from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in months) from the original date. This number can be negative or positive.</para>

<para>To create the <b>AddMonths</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddMonths(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddSeconds">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of seconds from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in seconds) from the original date. This number can be negative or positive. Its decimal part is part of a second.</para>

<para>To create the <b>AddSeconds</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddSeconds(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddTicks">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of ticks from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in 100-nanosecond ticks) from the original date. This number can be negative or positive.</para>

<para>To create the <b>AddTicks</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddTicks(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddTimeSpan">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified time period from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - a <see cref="T:System.TimeSpan"/> object representing the time period from the original date.</para>

<para>To create the <b>AddTimeSpan</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddTimeSpan(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddYears">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of years from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in years) from the original date. This number can be negative or positive.</para>

<para>To create the <b>AddYears</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddYears(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Ascii">
            <summary>
                <para>Returns the ASCII code of the first character in a specified string operand.

<para>If a specified operand represents an empty string, <b>null</b> is returned.</para>

<para>To create the <b>Ascii</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Ascii(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Asin">
            <summary>
                <para>Returns the angle (in radians) whose sine is a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Asin</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Asin(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Atn">
            <summary>
                <para>Returns the angle (in radians) whose tangent is a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Atn</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Atn(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Atn2">
            <summary>
                <para>Returns the angle (in radians) whose tangent is the quotient of two specified numeric operands.

<para>The operator requires two operands representing the Cartesian coordinates (<i>x</i>, <i>y</i>) of a point:</para>
<para>1 - the <i>y</i> coordinate;</para>
<para>2 - the <i>x</i> coordinate.</para>

<para>If specified operands cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Atn2</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Atn2(y, x)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.BigMul">
            <summary>
                <para>Calculates the product of two specified numeric operands.
<para>The operator requires two operands representing the integer values to be multiplied.</para>

<para>If the specified operands do not represent integer values, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>BigMul</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("BigMul(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Ceiling">
            <summary>
                <para>Returns the smallest integer greater than or equal to a specified numeric operand. The rounding provided by this operator is called rounding toward positive infinity.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Ceiling</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Ceiling(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Char">
            <summary>
                <para>Converts a specified numeric operand to a Unicode character.

<para>If a specified operand cannot be converted to a decimal or integer number, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Char</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Char(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.CharIndex">
            <summary>
                <para>Returns the index of the first occurrence of a specified substring in a specified string.

<para>The operands should be defined as follows:</para>

<para>1 - a substring to search;</para>
<para>2 - a string to be searched;</para>
<para>3 - (optional) an integer that specifies the zero-based index at which the search starts. If this operand is not specified, the search begins from the start of the string;</para>
<para>4 - (optional) an integer that specifies the number of characters to examine, starting from the specified position. If this operand is not specified, the search continues until the end of the string.</para>

<para>This function performs a word (case-sensitive and culture-sensitive) search using the current culture. If a specified substring is found, the function returns its index. Otherwise, -1 is returned.</para>

<para>To create the <b>CharIndex</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("CharIndex(Field1, Field2)")</b>, <b>CriteriaOperator.Parse("CharIndex(Field1, Field2, Field3)")</b>, or <b>CriteriaOperator.Parse("CharIndex(Field1, Field2, Field3, Field4)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Concat">
            <summary>
                <para>Concatenates one or more strings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Contains">
            <summary>
                <para>Returns True if one string occurs within another string; otherwise, False is returned.

<para>This function requires two string operands:</para>

<para>1 - a string to be searched;</para>
<para>2 - a substring to search.</para>

<para>
To create the <b>Contains</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Contains(String, SubString)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Cos">
            <summary>
                <para>Returns the cosine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Cos</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Cos(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Cosh">
            <summary>
                <para>Returns the hyperbolic cosine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Cosh</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Cosh(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Custom">
            <summary>
                <para>Identifies a custom operation.
<para>This operation is executed on the client side if its operands represent constants. A custom operation is executed on the server side only if its operands cannot be evaluated locally.</para>
<para>Refer to the How to: Implement a Custom Criteria Language Operator topic, to learn how to implement custom operators.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.CustomNonDeterministic">
            <summary>
                <para>Identifies a custom nondeterministic operation.
<para>Unlike a standard custom operation, a custom nondeterministic operation is always executed on the server side, regardless of whether its operands are constants.</para>
<para>Refer to the How to: Implement a Custom Criteria Language Operator topic, to learn how to implement custom operators.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffDay">
            <summary>
                <para>Returns an integer value representing the number of full days that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffDay</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffDay(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffHour">
            <summary>
                <para>Returns an integer value representing the number of full hours that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffHour</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffHour(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMilliSecond">
            <summary>
                <para>Returns an integer value representing the number of full milliseconds that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffMilliSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffMilliSecond(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMinute">
            <summary>
                <para>Returns an integer value representing the number of full minutes that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffMinute</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffMinute(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMonth">
            <summary>
                <para>Returns an integer value representing the number of full months that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffMonth</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffMonth(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffSecond">
            <summary>
                <para>Returns an integer value representing the number of full seconds that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffSecond(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffTick">
            <summary>
                <para>Returns an integer value representing the number of full ticks that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffTick</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffTick(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffYear">
            <summary>
                <para>Returns an integer value representing the number of full years that have elapsed between two specific dates.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffYear(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.EndsWith">
            <summary>
                <para>Returns True if the end of one string matches another string; otherwise, False is returned.

<para>This function requires two string operands:</para>

<para>1 - a string to be searched;</para>
<para>2 - a substring to search at the end of the first string.</para>

<para>
To create the <b>EndsWith</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("EndsWith(String, SubString)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp">
            <summary>
                <para>Returns the number <b>e</b> raised to the power specified by a numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Exp</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Power"/> operand to calculate powers of other bases.</para>

<para>To create the <b>Exp</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Exp(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Floor">
            <summary>
                <para>Returns the largest integer less than or equal to a specified numeric operand. The rounding provided by this operator is called rounding toward negative infinity.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Floor</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Floor(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDate">
            <summary>
                <para>Returns the date part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value represents a <see cref="T:System.DateTime"/> object with the same date part, and the time part set to 00:00:00.</para>

<para>To create the <b>GetDate</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDate(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDay">
            <summary>
                <para>Gets the day part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 31.</para>

<para>To create the <b>GetDay</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDay(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDayOfWeek">
            <summary>
                <para>Gets a specified date's day of the week.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value represents a <see cref="T:System.Int32"/> equivalent of a <see cref="T:System.DayOfWeek"/> enumerated constant representing a day of the week.</para>

<para>To create the <b>GetDayOfWeek</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDayOfWeek(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDayOfYear">
            <summary>
                <para>Gets a specified date's day of the year.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 366.</para>

<para>To create the <b>GetDayOfYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDayOfYear(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetHour">
            <summary>
                <para>Gets the hour part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 23.</para>

<para>To create the <b>GetHour</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetHour(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMilliSecond">
            <summary>
                <para>Gets the milliseconds part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 999.</para>

<para>To create the <b>GetMilliSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetMilliSecond(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMinute">
            <summary>
                <para>Gets the minute part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 59.</para>

<para>To create the <b>GetMinute</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetMinute(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMonth">
            <summary>
                <para>Gets the month part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 12.</para>

<para>To create the <b>GetMonth</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetMonth(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetSecond">
            <summary>
                <para>Gets the seconds part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 59.</para>

<para>To create the <b>GetSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetSecond(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetTimeOfDay">
            <summary>
                <para>Gets the time part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value represents a <see cref="T:System.Int64"/> object that is equal to the number of 100-nanosecond ticks that have elapsed since midnight.</para>

<para>To create the <b>GetTimeOfDay</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("GetTimeOfDay(Field1)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetYear">
            <summary>
                <para>Gets the year part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 9999.</para>

<para>To create the <b>GetYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetYear(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Iif">
            <summary>
                <para>Returns one of two values depending upon the value of a logical expression.

<para>
The function requires three operands of the  <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class:
</para>

<para>
1 - determines the logical expression;
</para>
<para>
2 - specifies the value that will be returned if the logical expression evaluates to TRUE;
</para>
<para>
3 - specifies the value that  will be returned if the logical expression evaluates to FALSE.
</para>

<para>
To create the <b>Iif</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Iif(Field1 == 100, Field1, Field2)")</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Insert">
            <summary>
                <para>Inserts a specified string at a certain position within another.

<para>The operands should be defined as follows:</para>

<para>1 - a string in which the insertion is to be performed;</para>
<para>2 - an integer that specifies the zero-based index position of the insertion;</para>
<para>3 - a string to insert.</para>

<para>To create the <b>Insert</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Insert(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNull">
            <summary>
                <para>Compares the first operand with the NULL value.

This function requires one or two operands of the  <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class. The value returned depends upon the number of arguments.

<para>
If a single argument is passed, the function returns <b>true</b> if the operand is <b>null</b>, otherwise, <b>false</b> is returned.
</para>

<para>
If two operands are passed, the function returns the second operand if the first operand is <b>null</b>, otherwise, the first operand is returned.
</para>

<para>
To create the <b>IsNull</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("IsNull(Field1)");</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNullOrEmpty">
            <summary>
                <para>Indicates whether a specified operator is a null reference (<b>Nothing</b> in Visual Basic) or an <see cref="F:System.String.Empty"/> string.

<para>The function returns <b>true</b> if a specified operand is <b>null</b> or an empty string, otherwise, <b>false</b> is returned.</para>

<para>To create the <b>IsNullOrEmpty</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("IsNullOrEmpty(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalBeyondThisYear">
            <summary>
                <para>The Boolean Is Beyond This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: <i>date</i> @gt;= First Day of Next Year
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisMonth">
            <summary>
                <para>The Boolean Is Earlier This Month operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of This Month @lt;= <i>date</i> @lt; First Day of Last Week
</para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisWeek">
            <summary>
                <para>The Boolean Is Earlier This Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of This Week @lt;= <i>date</i> @lt; Yesterday
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisYear">
            <summary>
                <para>The Boolean Is Earlier This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of This Year @lt;= <i>date</i> @lt; First Day of This Month
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLastWeek">
            <summary>
                <para>The Boolean Is Last Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of Last Week @lt;= <i>date</i> @lt; First Day of This Week
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisMonth">
            <summary>
                <para>The Boolean Is Later This Month operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: 
Last Day of Next Week @lt; <i>date</i> @lt; First Day of Next Month
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisWeek">
            <summary>
                <para>The Boolean Is Later This Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: 
Day After Tomorrow @lt;= <i>date</i> @lt; First Day of Next Week
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisYear">
            <summary>
                <para>The Boolean Is Later This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of Next Month @lt;= <i>date</i> @lt; First Day of Next Year
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalNextWeek">
            <summary>
                <para>The Boolean Is Next Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of Next Week @lt;= <i>date</i> @lt;= Last Day of Next Week
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalPriorThisYear">
            <summary>
                <para>The Boolean Is Prior This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: <i>date</i> @lt; First Day of This Year
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalToday">
            <summary>
                <para>The Boolean Is Today operator for date/time values. Requires one argument.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalTomorrow">
            <summary>
                <para>The Boolean Is Tomorrow operator for date/time values. Requires one argument.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalYesterday">
            <summary>
                <para>The Boolean Is Yesterday operator for date/time values. Requires one argument.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Len">
            <summary>
                <para>Returns the length of the string specified by an operand.

<para>
The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.
</para>


<para>
To create the <b>Len</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Len(Field2)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeDayAfterTomorrow">
            <summary>
                <para>Returns the DateTime value corresponding to the day after Tomorrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastWeek">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the previous week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextMonth">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of next month.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextWeek">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the following week.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextYear">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the following year.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNow">
            <summary>
                <para>Returns the DateTime value corresponding to the current moment in time.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisMonth">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the current month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisWeek">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the current week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisYear">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the current year.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeToday">
            <summary>
                <para>Returns the DateTime value corresponding to Today.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTomorrow">
            <summary>
                <para>Returns the DateTime value corresponding to Tomorrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoWeeksAway">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the week that is after next week.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeYesterday">
            <summary>
                <para>Returns the DateTime value corresponding to Yesterday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Log">
            <summary>
                <para>Returns the logarithm of a specified numeric operand. The return value depends upon the number of operands.

<para>If one operand is passed, the natural (base <b>e</b>) logarithm of a specified operand is returned.</para>

<para>If two operands are passed, the logarithm of a specified operand in a specified base is returned. The operands should be defined as follows:</para> 
<para>1 - a number whose logarithm is to be calculated;</para>
<para>2 - the base of the logarithm.</para>

<para>If specified operands cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Log</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp"/>. To calculate the base 10 logarithm, use <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10"/>.</para>

<para>To create the <b>Log</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Log(Field1)")</b> or <b>CriteriaOperator.Parse("Log(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10">
            <summary>
                <para>Returns the base 10 logarithm of a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Log10</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Power"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/> operand to calculate the logarithm of other bases.</para>

<para>To create the <b>Log10</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Log10(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Lower">
            <summary>
                <para>Converts all characters in a string operand to lowercase.
<para>
The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.
</para>
To create the <b>Lower</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Lower(Field1)");</b> 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Max">
            <summary>
                <para>Returns the larger of two numeric values. 

<para>The operands should be defined as follows:</para>

<para>1 - a numeric value A;</para>
<para>2 - a numeric value B;</para>

<para>To create the <b>Max</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Max(ValueA, ValueB)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Min">
            <summary>
                <para>Returns the smaller of two numeric values.

<para>The operands should be defined as follows:</para>

<para>1 - a numeric value A;</para>
<para>2 - a numeric value B;</para>

<para>To create the <b>Min</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Min(ValueA, ValueB)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.None">
            <summary>
                <para>The function type is not specified.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Now">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the system's current date and time.

<para>To create the <b>Now</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Now()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.PadLeft">
            <summary>
                <para>Pads a string with spaces or a specified Unicode character on the left for a specified total length.

<para>The operands should be defined as follows:</para>
<para>1 - a string to be padded;</para>
<para>2 - the total number of characters in the resulting string, including padding characters;</para>
<para>3 - (optional) a Unicode padding character. If not specified, the space character is used for padding. If a string is passed as this operand, its first character is used for padding.</para>

<para>To create the <b>PadLeft</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("PadLeft(Field1, Field2)")</b> or <b>CriteriaOperator.Parse("PadLeft(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.PadRight">
            <summary>
                <para>Pads a string with spaces or a specified Unicode character on the right for a specified total length.

<para>The operands should be defined as follows:</para>
<para>1 - a string to be padded;</para>
<para>2 - the total number of characters in the resulting string, including padding characters;</para>
<para>3 - (optional) a Unicode padding character. If not specified, the space character is used for padding. If a string is passed as this operand, its first character is used for padding.</para>

<para>To create the <b>PadRight</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("PadRight(Field1, Field2)")</b> or <b>CriteriaOperator.Parse("PadRight(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Power">
            <summary>
                <para>Returns a specified numeric operand raised to a specific power.

<para>The <b>Power</b> operator requires two operands:</para>
<para>1 - a number to be raised to a power;</para>
<para>2 - a power.</para>

<para>If specified operands cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Power</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/> or <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp"/> operand to calculate powers of the number <b>e</b>.</para>

<para>To create the <b>Power</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Power(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Remove">
            <summary>
                <para>Removes all, or a certain number of characters from a specified string, starting at a specified position.

<para>The operands should be defined as follows:</para>

<para>1 - a string to be shrunk;</para>
<para>2 - an integer that specifies the zero-based index at which character removal starts;</para>
<para>3 - (optional) an integer that specifies the number of characters to remove, starting at the specified position. If this operand is not specified, all characters between the starting position and the end of the string are removed.</para>

<para>To create the <b>Remove</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Remove(Field1, Field2)")</b> or <b>CriteriaOperator.Parse("Remove(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Replace">
            <summary>
                <para>Replaces all occurrences of a certain string in a specified string, with another.

<para>The operands should be defined as follows:</para>

<para>1 - a string in which replacements are to be performed;</para>
<para>2 - a string to be replaced;</para>
<para>3 - a string to replace all occurrences found.</para>

<para>To create the <b>Replace</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Replace(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Reverse">
            <summary>
                <para>Reverses the order of characters within a specified string.

<para>To create the <b>Reverse</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Reverse(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Rnd">
            <summary>
                <para>Returns a random number greater than or equal to 0.0, and less than 1.0.

<para>To create the <b>Rnd</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Rnd()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Round">
            <summary>
                <para>Rounds a specified numeric operand to the nearest integer or to a specified number of decimal places. The rounding provided by this operator is called rounding to nearest or banker's rounding.

<para>The operands should be defined as follows:</para>
<para>1 - a value to round;</para>
<para>2 - (optional) a value specifying the number of decimal places to round to. <b>0</b> indicates that the first operand is rounded to the nearest integer.</para>

<para>To create the <b>Round</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Round(Field1)")</b> or <b>CriteriaOperator.Parse("Round(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sign">
            <summary>
                <para>Returns a value indicating the sign of a number represented by a specified operand. The function returns one of the following values:
<para>1, for positive numbers;</para>
<para>-1, for negative numbers;</para>
<para>0, if the number is equal to zero.</para>

<para>If a specified operand is not numeric, <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sign</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Sign(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sin">
            <summary>
                <para>Returns the sine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sin</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Sin(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sinh">
            <summary>
                <para>Returns the hyperbolic sine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sinh</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Sinh(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sqr">
            <summary>
                <para>Returns the square root of a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sqr</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Sqr(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.StartsWith">
            <summary>
                <para>Returns True if the beginning of one string matches another string; otherwise, False is returned.

<para>This function requires two string operands:</para>

<para>1 - a string to be searched;</para>
<para>2 - a substring to search at the beginning of the first string.</para>

<para>
To create the <b>StartsWith</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("StartsWith(String, SubString)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Substring">
            <summary>
                <para>Returns a substring extracted from the specified string. This function requires two or three operands of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class.
<para>
If two operands are passed the substring will be extracted from the beginning of the original string. The operands should be defined as follows:
</para>
<para>
1 - an original string;
</para>
<para>
2 - an integer that specifies the length of the substring.
</para>

<para>
If three operands are passed a substring can be subtracted starting from any position in the original string. The operands should be defined as follows:

</para>
<para>
1 - an original string;
</para>
<para>
2 - an integer that specifies the zero-based index at which the substring to return begins;
</para>
<para>
3 - an integer that specifies the length of the substring.
</para>

<para>
To create a <b>Substring</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Substring(Field1, 1, 3)");</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Tan">
            <summary>
                <para>Returns the tangent of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Tan</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Tan(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Tanh">
            <summary>
                <para>Returns the hyperbolic tangent of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Tanh</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Tanh(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Today">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the system's current date. The object's time part is set to 00:00:00.

<para>To create the <b>Today</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Today()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToStr">
            <summary>
                <para>Returns a string representation of a specified numeric operand.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>ToStr</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToStr(Field1)")</b>.</para>

<para>Note that the resulting string may vary, based on the format settings of the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Trim">
            <summary>
                <para>Returns a string containing a copy of a specified string with no leading nor trailing spaces. This function requires a single operand of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class that refers to the original string.

<para>
To create the <b>Trim</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Trim(Field2)");</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Upper">
            <summary>
                <para>Converts all characters in a string operand to uppercase.
<para>
The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.
</para>
To create the <b>Upper</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Upper(Field1)");</b> 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.UtcNow">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the current Coordinated Universal Time (UTC) date and time.

<para>To create the <b>UtcNow</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("UtcNow()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.BinaryOperatorType">

            <summary>
                <para>Enumerates binary operator types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseAnd">
            <summary>
                <para>Represents the bitwise AND operator.

<para>
To create the <b>bitwise AND</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 @amp; 128 = 128")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseOr">
            <summary>
                <para>Represents the bitwise OR operator.

<para>
To create the <b>bitwise OR</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 | 3")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseXor">
            <summary>
                <para>Represents the bitwise XOR operator.

<para>
To create the <b>bitwise XOR</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("(Field1 ^ Field2) = 1")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Divide">
            <summary>
                <para>Represents the division operator.

<para>
To create the division operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>
<b>CriteriaOperator.Parse("Field1 / Field2 = 2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Equal">
            <summary>
                <para>Represents the Boolean equality operator.

<para>
To create the Boolean equality operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 = Field2")</b>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Greater">
            <summary>
                <para>Represents the Boolean greater-than operator.

<para>
To create the Boolean greater-than operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 @gt; Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.GreaterOrEqual">
            <summary>
                <para>Represents the Boolean greater-than-or-equal-to operator.

<para>
To create the Boolean greater-than-or-equal-to operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 @gt;= Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Less">
            <summary>
                <para>Represents the Boolean less-than operator.

<para>
To create the Boolean less-than operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 @lt; Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.LessOrEqual">
            <summary>
                <para>Represents the Boolean less-than-or-equal-to operator.

<para>
To create the Boolean less-than-or-equal-to operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 @lt;= Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Like">
            <summary>
                <para>Represents the LIKE operator.

<para>
To create the <b>LIKE</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 like '%val1%' OR Field1 like '%val2%'")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Minus">
            <summary>
                <para>Represents the subtraction operator.

<para>
To create the subtraction operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 - Field2 = 10")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Modulo">
            <summary>
                <para>Represents the modulus operator (computes the remainder after dividing its first operand by its second).

<para>
To create the modulus operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 % Field2 = 1")</b>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Multiply">
            <summary>
                <para>Represents the multiplication operator.

<para>
To create the multiplication operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 * Field2 = 100")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.NotEqual">
            <summary>
                <para>Represents the Boolean inequality operator.

<para>
To create the Boolean inequality operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 != Field2")</b> or <b>CriteriaOperator.Parse("Field1 @lt;@gt; Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Plus">
            <summary>
                <para>Represents the addition operator.

<para>
To create the addition operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 + Field2 = 20")</b>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.Aggregate">

            <summary>
                <para>Enumerates aggregate functions.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Avg">
            <summary>
                <para>Evaluates the average of the values in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Count">
            <summary>
                <para>Returns the number of objects in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Exists">
            <summary>
                <para>Determines whether the object exists in the collection. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Max">
            <summary>
                <para>Returns the maximum expression value in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Min">
            <summary>
                <para>Returns the minimum expression value in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Sum">
            <summary>
                <para>Returns the sum of all the expression values in the collection.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore">

            <summary>
                <para>Provides methods for transferring data between cached data store elements.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>When implemented by a class, executes specified modification statements against a cached data store, notifies about affected tables and returns the operation result.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="dmlStatements">
		An array of data modification statements.

            </param>
            <returns>A <A HREF="clsDevExpressXpoDBHelpersDataCacheModificationResulttopic.htm">DataCacheModificationResult</A> denoting the result of the data modifications.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
            <summary>
                <para>When implemented by a class, informs a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) about specific modified tables.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="dirtyTablesNames">
		An array of table names specifying modified tables.

            </param>
            <returns>A <A HREF="clsDevExpressXpoDBHelpersDataCacheResulttopic.htm">DataCacheResult</A> object specifying a Root element's state.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
            <summary>
                <para>When implemented by a class, synchronizes table update information with a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <returns>A <A HREF="clsDevExpressXpoDBHelpersDataCacheResulttopic.htm">DataCacheResult</A> object specifying a Root element's state.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>When implemented by a class, fetches data from a cached data store using specified query statements and returns the operation result.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="selects">
		An array of query statements.

            </param>
            <returns>A <A HREF="clsDevExpressXpoDBHelpersDataCacheSelectDataResulttopic.htm">DataCacheSelectDataResult</A> object denoting the result of the data fetch.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
            <summary>
                <para>When implemented by a class, updates a cached data store's schema according to specified settings and returns the operation result.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="tables">
		An array of tables whose structure should be saved in the cached data store.

            </param>
            <param name="dontCreateIfFirstTableNotExist">
		<b>true</b> if the schema should not be created if the table that corresponds to the first item in the <i>tables</i> array doesn't exist in the cached data store; otherwise, <b>false</b>.

            </param>
            <returns>An <A HREF="clsDevExpressXpoDBHelpersDataCacheUpdateSchemaResulttopic.htm">DataCacheUpdateSchemaResult</A> denoting the result of the update operation.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ICachedDataStore">

            <summary>
                <para>The interface for objects that need to interact with a cached data store.

</para>
            </summary>

        </member>
        <member name="T:DevExpress.Xpo.DB.DataStoreBase">

            <summary>
                <para>The base class for data store providers (the objects providing access to specific data stores).
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.DataStoreBase.AutoCreateOption">
            <summary>
                <para>Returns which operations are performed when a data store is accessed for the first time.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a data store is accessed for the first time.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataStoreBase.Factories">
            <summary>
                <para>Returns registered provider factories.
</para>
            </summary>
            <value>An array of provider factories that are registered for the current data store.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.QueryDataStore(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
            <summary>
                <para>Creates a data store based on specified settings.
</para>
            </summary>
            <param name="connection">
		An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.

            </param>
            <param name="autoCreateOption">
		An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to the created data store. The specified value initializes the data store's <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.

            </param>
            <returns>A data store implementing the <A HREF="clsDevExpressXpoDBIDataStoretopic.htm">IDataStore</A> interface, which uses the <i>connection</i> to access a database.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.QueryDataStore(System.String,System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
            <summary>
                <para>Creates a data store based on specified settings.
</para>
            </summary>
            <param name="providerType">
		A <see cref="T:System.String"/> specifying the provider type. Normally, each provider returns its type via the <b>XpoProviderTypeString</b> property.

            </param>
            <param name="connectionString">
		The connection string which is used to instantiate a connection provider.

            </param>
            <param name="defaultAutoCreateOption">
		An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to the created data store. The specified value initializes the data store's <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.

            </param>
            <param name="objectsToDisposeOnDisconnect">
		An array of objects that implement the System.IDisposable interface. These objects are automatically disposed of when the created data store is disconnected.

            </param>
            <returns>A data store implementing the <A HREF="clsDevExpressXpoDBIDataStoretopic.htm">IDataStore</A> interface, which uses the <i>connection</i> to access a database.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterDataStoreProvider(System.String,DevExpress.Xpo.DB.Helpers.DataStoreCreationFromStringDelegate)">
            <summary>
                <para>Registers a data store provider using a specified name and a procedure that establishes a connection for the provider.
</para>
            </summary>
            <param name="providerKey">
		A <see cref="T:System.String"/> that uniquely identifies a data store provider.

            </param>
            <param name="createFromStringDelegate">
		A <b>DataStoreCreationFromStringDelegate</b> delegate to be called when the data store provider is created and connected to a database using a connection string.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterDataStoreProvider(System.String,DevExpress.Xpo.DB.Helpers.DataStoreCreationFromConnectionDelegate)">
            <summary>
                <para>Registers a data store provider using a specified connection type name and a procedure that establishes a connection for the provider.
</para>
            </summary>
            <param name="connectionTypeShortName">
		A <see cref="T:System.String"/> specifying a connection type name, including a namespace. For instance, the <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> defines this parameter as "System.Data.SqlClient.SqlConnection".

            </param>
            <param name="createFromConnectionDelegate">
		A <b>DataStoreCreationFromConnectionDelegate</b> delegate to be called when the data store provider is created and connected to a database using a connection of the specified type.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterFactory(DevExpress.Xpo.DB.ProviderFactory)">
            <summary>
                <para>Registers a specified data store provider factory.
</para>
            </summary>
            <param name="providerFactory">
		A <b>ProviderFactory</b> object exposing members required to create a data store provider.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.UpdateSchema(DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para>Updates a data store's schema according to specified settings.
</para>
            </summary>
            <param name="tables">
		An array of tables whose structure should be saved in the data store.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataStoreBase.XpoConnectionCountParameterName">
            <summary>
                <para>Returns a parameter name used to denote a connection pool's capacity (the number of connections to be available within the pool) in a connection string. The default value is "XpoConnectionCount".
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataStoreBase.XpoProviderTypeParameterName">
            <summary>
                <para>Returns a parameter name used to denote a provider type in a connection string. The default value is "XpoProvider".
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataCacheRoot">

            <summary>
                <para>The Root element that is used to connect Node elements to a cached data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.#ctor(DevExpress.Xpo.DB.IDataStore)">
            <summary>
                <para>Initializes a new instance of the DataCacheRoot class with a specified data store provider connected to a data store to be cached.
</para>
            </summary>
            <param name="subjectForCache">
		A  object which provides connection to a data store to be cached.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheRoot.AutoCreateOption">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
            <summary>
                <para>Applies specified configuration settings to a cached data store.
</para>
            </summary>
            <param name="configuration">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.GetStorageTables(System.String[])">
            <summary>
                <para>Returns information that describes the structure of specified tables in a cached data store.
</para>
            </summary>
            <param name="tables">
		An array of table names whose information should be retrieved.

            </param>
            <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structure of the requested <i>tables</i>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.GetStorageTablesList">
            <summary>
                <para>Returns a list of all the tables available in a cached data store.
</para>
            </summary>
            <returns>An array of the table names in the cached data store.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataCacheNodeLocal">

            <summary>
                <para>The Node element that is used to connect to a cached data store's Root or Node element located on the same computer.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNodeLocal.#ctor(DevExpress.Xpo.DB.ICacheToCacheCommunicationCore)">
            <summary>
                <para>Initializes a new instance of the DataCacheNodeLocal class with default settings and a specified parent cache element.
</para>
            </summary>
            <param name="parentCache">
		A parent Root or Node element specifying the element (located on the same computer) to which the current Node is connected.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNodeLocal.IsProbablyGroupByStatement(DevExpress.Xpo.DB.SelectStatement)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="stmt">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataCacheNode">

            <summary>
                <para>The Node element that is used to connect to a cached data store's Root or Node element.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.#ctor(DevExpress.Xpo.DB.ICacheToCacheCommunicationCore)">
            <summary>
                <para>Initializes a new instance of the DataCacheNode class with default settings and a specified parent cache element.
</para>
            </summary>
            <param name="parentCache">
		A parent Root or Node element specifying the element to which the current Node is connected.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.AutoCreateOption">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.CatchUp">
            <summary>
                <para>Synchronizes the Node's table update information with the Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
            <summary>
                <para>Applies specified configuration settings to a cached data store.
</para>
            </summary>
            <param name="configuration">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.GetStorageTables(System.String[])">
            <summary>
                <para>Returns information that describes the structure of specified tables in a cached data store.
</para>
            </summary>
            <param name="tables">
		An array of table names whose information should be retrieved.

            </param>
            <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structure of the requested <i>tables</i>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.GetStorageTablesList">
            <summary>
                <para>Returns a list of all the tables available in a cached data store.
</para>
            </summary>
            <returns>An array of the table names in the cached data store.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.GlobalTotalMemoryPurgeThreshold">
            <summary>
                <para>Specifies the amount of memory (in bytes) for an application hosting the current Node's cache, above which the automatic cache purge is initiated in all Node caches, regardless of the <see cref="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeThreshold"/> and <see cref="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeThreshold"/> field values. The default value is the maximum possible <see cref="T:System.Int64"/> value; in the .NET Compact Framework - 32 MB (32*1024*1024 bytes).
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.GlobalTotalMemoryPurgeTreshhold">
            <summary>
                <para>Specifies the amount of memory (in bytes) for an application hosting the current Node's cache, above which the automatic cache purge is initiated in all Node caches, regardless of other memory limit properties.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.MaxCacheLatency">
            <summary>
                <para>Specifies the time period (also known as latency) between regular contacts that the current Node makes to its parent element for up-to-date table update information. The default value is 30 seconds.

</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.MinCachedRequestsAfterPurge">
            <summary>
                <para>Specifies the minimum number of query results to retain within the current Node's cache during its automatic purge. The default value is 16.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeThreshold">
            <summary>
                <para>Specifies the amount of memory (in bytes) for an application hosting the current Node's cache, under which the automatic cache purge is not initiated. The default value is 64 MB (64*1024*1024 bytes); in the .NET Compact Framework - 4 MB (4*1024*1024 bytes).
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeTreshhold">
            <summary>
                <para>Specifies the amount of memory (in bytes) for an application hosting the current Node's cache, under which the automatic cache purge is not initiated.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeThreshold">
            <summary>
                <para>Specifies the amount of memory (in bytes) for an application hosting the current Node's cache, above which the automatic cache purge is initiated. The default value is the maximum possible <see cref="T:System.Int64"/> value; in the .NET Compact Framework - 32 MB (32*1024*1024 bytes).
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeTreshhold">
            <summary>
                <para>Specifies the amount of memory (in bytes) for an application hosting the current Node's cache, above which the automatic cache purge is initiated.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.TableAge">

            <summary>
                <para>Information on the age of tables cached via a <see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.TableAge.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.TableAge.#ctor(System.String,System.Int64)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="name">
		 

            </param>
            <param name="age">
		 

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.TableAge.Age">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.TableAge.Name">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including schema update results.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult.UpdateSchemaResult">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including query results.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.SelectedData">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.SelectingCookie">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.CacheConfig">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.Cookie">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.UpdatedTableAges">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheCookie">

            <summary>
                <para>A cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) state information stored in a Node element (<see cref="T:DevExpress.Xpo.DB.DataCacheNode"/> or <see cref="T:DevExpress.Xpo.DB.DataCacheNodeLocal"/>).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheCookie.#ctor(System.Guid,System.Int64)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="guid">
		 

            </param>
            <param name="age">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheCookie.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Age">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Empty">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Guid">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including data modification results.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult.ModificationResult">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration">

            <summary>
                <para>Contains configuration settings for cached data stores.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.#ctor(DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching,System.String[])">
            <summary>
                <para>Initializes a new instance of the DataCacheConfiguration class with specified caching scope settings.
</para>
            </summary>
            <param name="caching">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching"/> enumeration value specifying the scope of <i>tables</i>. The specified value is used to initialize the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Caching"/> property.

            </param>
            <param name="tables">
		An array of table names used to determine the caching scope. The specified value is used to initialize the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.#ctor">
            <summary>
                <para>Initializes a new instance of the DataCacheConfiguration class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Caching">
            <summary>
                <para>Specifies the scope of table settings in the current configuration.
</para>
            </summary>
            <value>A <A HREF="DevExpressXpoDBHelpersDataCacheConfigurationCachingEnumtopic.htm">DataCacheConfigurationCaching</A> enumeration value which identifies if tables specified via the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables"/> property are included in or excluded from the caching scope.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.CreateTableDictionary(System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="tableList">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Empty">
            <summary>
                <para>Returns a shallow DataCacheConfiguration instance.
</para>
            </summary>
            <value>A <A HREF="clsDevExpressXpoDBHelpersDataCacheConfigurationtopic.htm">DataCacheConfiguration</A> object instance with no configuration settings specified.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.TableDictionary">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables">
            <summary>
                <para>Specifies tables to be used to determine the caching scope of the current configuration.
</para>
            </summary>
            <value>An array of table names specifying the tables to be included in or excluded from the caching scope.

</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.FunctionCategory">

            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.All">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.DateTime">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.Logical">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.Math">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.Text">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable">

            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable.Format(System.Type,System.String[])">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="providerType">
		 [To be supplied] 
            </param>
            <param name="operands">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable">

            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.Category">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.Description">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandCount(System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="count">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandType(System.Int32,System.Int32,System.Type)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="operandIndex">
		 [To be supplied] 
            </param>
            <param name="operandCount">
		 [To be supplied] 
            </param>
            <param name="type">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.MaxOperandCount">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.MinOperandCount">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperator">

            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.Evaluate(System.Object[])">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="operands">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.ResultType(System.Type[])">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="operands">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ConstantValue">

            <summary>
                <para>A constant value operand in criteria expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ConstantValue.#ctor">
            <summary>
                <para>Initializes a new instance of the ConstantValue class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.ConstantValue.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the ConstantValue class with the specified constant value.
</para>
            </summary>
            <param name="value">
		The constant value for the operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.OperandValue.Value"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ConstantValue.Clone">
            <summary>
                <para>Creates a copy of the current ConstantValue instance.
</para>
            </summary>
            <returns>An ConstantValue object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="T:DevExpress.Utils.LayoutAllowEventHandler">

            <summary>
                <para>A method that will handle events raised when upgrading a control's layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.). 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutAllowEventHandler.Invoke(System.Object,DevExpress.Utils.LayoutAllowEventArgs)">
            <summary>
                <para>A method that will handle events raised when upgrading a control's layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.).
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.LayoutAllowEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.LayoutAllowEventArgs">

            <summary>
                <para>Provides data for events raised when upgrading a control's layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutAllowEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the LayoutAllowEventArgs class with the specified previous version.
</para>
            </summary>
            <param name="previousVersion">
		A <see cref="T:System.String"/> specifying the previous version number. This value is assigned to the <see cref="P:DevExpress.Utils.LayoutUpgadeEventArgs.PreviousVersion"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.LayoutAllowEventArgs.Allow">
            <summary>
                <para>Gets or sets whether to allow upgrading the control layout.
</para>
            </summary>
            <value><b>true</b> to allow the operation; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.VerticalContentSplitting">

            <summary>
                <para>Specifies how content bricks are split if they are partially positioned outside the right page margin.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.VerticalContentSplitting.Exact">
            <summary>
                <para>In this case all content bricks, which are outside the right page margin, will be split across two pages in place of a right margin line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.VerticalContentSplitting.Smart">
            <summary>
                <para>In this case all content bricks, which are outside the right page margin, will be entirely moved to the next page, so the appearance will be more professional.


</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.ExceptionAction">

            <summary>
                <para>Specifies how to resolve exceptions while performing an action.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.ExceptionAction.CancelAction">
            <summary>
                <para>Cancel the action that caused an exception.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ExceptionAction.RetryAction">
            <summary>
                <para>Retry the action that caused an exception.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.SortProperty">

            <summary>
                <para>An element in the <see cref="T:DevExpress.Xpo.SortingCollection"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.SortProperty.#ctor(System.String,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class with a property name to sort against and the sort order.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property to sort against. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.PropertyName"/> property.

            </param>
            <param name="sorting">
		A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the property's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Direction"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.SortProperty.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.SortProperty.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the SortProperty class.
</para>
            </summary>
            <param name="property">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression used to sort values. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Property"/> property.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the property's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Direction"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.SortProperty.Direction">
            <summary>
                <para>Gets or sets the property's sort order.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the property's sort order.
</value>


        </member>
        <member name="P:DevExpress.Xpo.SortProperty.Property">
            <summary>
                <para>Gets or sets the expression used to sort values.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression used to sort values.
</value>


        </member>
        <member name="P:DevExpress.Xpo.SortProperty.PropertyName">
            <summary>
                <para>Gets or sets the name of the property to sort against.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the name of the property that identifies the sorted column in a data store. This value is case-sensitive.

</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.ICheckSpellingResult">

            <summary>
                <para>Represents the result of the spelling check.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.HasError">
            <summary>
                <para>Gets whether the spelling error is found during a spelling check.
</para>
            </summary>
            <value><b>true</b> if a spelling error is found; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Index">
            <summary>
                <para>Gets the index of a checked word in a text.

</para>
            </summary>
            <value>An integer representing the index of a word in a text.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Length">
            <summary>
                <para>Gets the length of a checked word.
</para>
            </summary>
            <value>An integer representing the number of positions the checked word occupies.


</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Result">
            <summary>
                <para>Indicates the result of checking a word.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.CheckSpellingResultType"/> enumeration member.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Text">
            <summary>
                <para>Gets the text being checked.
</para>
            </summary>
            <value>A string containing the text being checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Value">
            <summary>
                <para>Gets the checked word.
</para>
            </summary>
            <value>A string representing the checked word.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.IBasePrintable">

            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.CreateArea(System.String,DevExpress.XtraPrinting.IBrickGraphics)">
            <summary>
                <para>When implemented by a class, creates report elements (bricks) for a specific area.
</para>
            </summary>
            <param name="areaName">
		The name of the report area (section) for which elements should be created.

            </param>
            <param name="graph">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrickGraphics"/> interface, which is a graphical surface on which report elements will be drawn.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.Finalize(DevExpress.XtraPrinting.IPrintingSystem,DevExpress.XtraPrinting.ILink)">
            <summary>
                <para>If implemented by a class, finalizes the printing of the report. 
</para>
            </summary>
            <param name="ps">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.


            </param>
            <param name="link">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface which refers to a control.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.Initialize(DevExpress.XtraPrinting.IPrintingSystem,DevExpress.XtraPrinting.ILink)">
            <summary>
                <para>When implemented by a class, initializes a control for report creation.
</para>
            </summary>
            <param name="ps">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.

            </param>
            <param name="link">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface which refers to a control.

            </param>


        </member>
        <member name="T:DevExpress.Utils.DXCollectionBase`1">

            <summary>
                <para>Represents the universal collection, which may be used as a base class for other collection classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.#ctor">
            <summary>
                <para>Initializes a new instance of the DXCollectionBase@lt;T@gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.#ctor(System.Int32)">
            <summary>
                <para>Initializes a new instance of the DXCollectionBase@lt;T@gt; class with the specified capacity.

</para>
            </summary>
            <param name="capacity">
		An integer value representing the number of elements that the collection can contain. This value is assigned to the <see cref="P:DevExpress.Utils.DXCollectionBase`1.Capacity"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Add(DevExpress.Utils.T)">
            <summary>
                <para>Adds the specified object to the collection.

</para>
            </summary>
            <param name="value">
		A @lt;T@gt; object to append to the collection.

            </param>
            <returns>An integer value indicating the position into which the new element was inserted.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.AddRange(System.Collections.ICollection)">
            <summary>
                <para>Adds a collection of elements to the end of the collection.
</para>
            </summary>
            <param name="collection">
		A <see cref="T:System.Collections.ICollection"/> object which represents the collection of elements to append to the collection.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DXCollectionBase`1.Capacity">
            <summary>
                <para>Gets or sets the number of elements that the DXCollectionBase@lt;T@gt; can contain.
</para>
            </summary>
            <value>An integer value representing the number of elements that the collection can contain. 
</value>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Clear">
            <summary>
                <para>Removes all objects from the DXCollectionBase@lt;T@gt; instance.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Contains(DevExpress.Utils.T)">
            <summary>
                <para>Determines whether the collection contains the specified item.

</para>
            </summary>
            <param name="value">
		A @lt;T@gt; object to locate in the collection.

            </param>
            <returns><b>true</b> if the collection contains the specified item; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.CopyTo(DevExpress.Utils.T[],System.Int32)">
            <summary>
                <para>Copies all the elements from the DXCollectionBase@lt;T@gt; instance to a one-dimensional array, starting at the specified index of the target array.

</para>
            </summary>
            <param name="array">
		A one-dimensional array of @lt;T@gt; objects.


            </param>
            <param name="index">
		An integer value specifying the zero-based index in the target array at which copying begins.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DXCollectionBase`1.Count">
            <summary>
                <para>Gets the number of elements contained in the DXCollectionBase@lt;T@gt; instance.
</para>
            </summary>
            <value>An integer value representing the number of elements contained in the collection. 
</value>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Find(System.Predicate`1)">
            <summary>
                <para>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire DXCollectionBase@lt;T@gt;.
</para>
            </summary>
            <param name="match">
		The <see cref="T:System.Predicate"/><b>@lt;T@gt;</b> delegate that defines the conditions of the element to search for.



            </param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <i>T</i>. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.ForEach(System.Action`1)">
            <summary>
                <para>Performs the specified action on each element of the DXCollectionBase@lt;T@gt;.
</para>
            </summary>
            <param name="action">
		The <see cref="T:System.Action"/>@lt;T@gt; delegate to perform on each element of the DXCollectionBase@lt;T@gt;.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.GetEnumerator">
            <summary>
                <para>Returns an enumerator that iterates through the DXCollectionBase@lt;T@gt; instance.
</para>
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator"/> for the DXCollectionBase@lt;T@gt; instance.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.IndexOf(DevExpress.Utils.T)">
            <summary>
                <para>Returns the zero-based index of the specified element in the collection. 
</para>
            </summary>
            <param name="value">
		A @lt;T@gt; object to locate in the collection. 

            </param>
            <returns>An integer value representing the position of the specified element in the collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Insert(System.Int32,DevExpress.Utils.T)">
            <summary>
                <para>Inserts the specified element into the collection at the specified position.

</para>
            </summary>
            <param name="index">
		An integer value which represents the zero-based index at which the element should be inserted.

            </param>
            <param name="value">
		A @lt;T@gt; object to insert into the collection.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Remove(DevExpress.Utils.T)">
            <summary>
                <para>Removes the specified element from the collection.
</para>
            </summary>
            <param name="value">
		A @lt;T@gt; object to be removed from the collection.

            </param>
            <returns><b>true</b> if the specified element has been successfully removed from the collection; <b>false</b> if the specified element has not been found within the collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.RemoveAt(System.Int32)">
            <summary>
                <para>Removes the element at the specified index of the DXCollectionBase@lt;T@gt; instance.
</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the index of the object to remove. If it's negative or exceeds the number of elements, an exception is raised.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Sort(System.Collections.Generic.IComparer`1)">
            <summary>
                <para>Sorts the elements in the entire DXCollectionBase@lt;T@gt; using the specified comparer.
</para>
            </summary>
            <param name="comparer">
		The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DXCollectionBase`1.UniquenessProviderType">
            <summary>
                <para>Gets or sets the type of an object, which provides uniqueness for the current DXCollectionBase@lt;T@gt;.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DXCollectionUniquenessProviderType"/> instance.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler">

            <summary>
                <para>Represents a method that will handle the <b>AfterCheckWord</b> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler.Invoke(System.Object,DevExpress.XtraSpellChecker.AfterCheckWordEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.
</para>
            </summary>
            <param name="sender">
		An object that triggers the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs">

            <summary>
                <para>Provides data for the <b>AfterCheckWord</b> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.#ctor(System.Object,System.String,System.String,DevExpress.XtraSpellChecker.SpellCheckOperation,DevExpress.XtraSpellChecker.Parser.Position)">
            <summary>
                <para>Initializes a new AfterCheckWordEventArgs class instance with specified settings.
</para>
            </summary>
            <param name="editControl">
		An object, representing the control being checked.

            </param>
            <param name="originalWord">
		A string, representing a word before the check. 

            </param>
            <param name="changedWord">
		A string, representing the word modified after the spell check.

            </param>
            <param name="result">
		A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type. 

            </param>
            <param name="startPosition">
		A DevExpress.XtraSpellChecker.Parser.Position object, representing the position in the text where the checked word begins.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.ChangedWord">
            <summary>
                <para>Gets the word which replaced the former one after the spelling check is performed.
</para>
            </summary>
            <value>A string, representing the word modified after spelling check.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.EditControl">
            <summary>
                <para>Gets the control being checked.
</para>
            </summary>
            <value>An object representing a control being checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.Operation">
            <summary>
                <para>Gets the type of operation performed with the word in a spell check.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.OriginalWord">
            <summary>
                <para>Gets the word before the spell check is performed.

</para>
            </summary>
            <value>A string, representing a word before the check.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.StartPosition">
            <summary>
                <para>Gets the position of a checked word in a text.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.Parser.Position"/> object, representing the position in a text where the checked word begins. 

</value>


        </member>
        <member name="T:DevExpress.Utils.NotificationCollection`1">

            <summary>
                <para>Represents a base class for collections that are able to send update notifications. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.#ctor">
            <summary>
                <para>Initializes a new instance of the NotificationCollection@lt;T@gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.AddRange(System.Collections.ICollection)">
            <summary>
                <para>Adds a collection of objects to the end of the current collection.
</para>
            </summary>
            <param name="collection">
		An object exposing the <see cref="T:System.Collections.ICollection"/> interface, which represents the collection of objects to append.

            </param>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.BeginUpdate">
            <summary>
                <para>Suppresses update notifications until the <see cref="M:DevExpress.Utils.NotificationCollection`1.EndUpdate"/> method is called. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.CancelUpdate">
            <summary>
                <para>Unlocks the collection after a call to the <see cref="M:DevExpress.Utils.NotificationCollection`1.BeginUpdate"/> method and causes an immediate update without raising any notification events. 

</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.NotificationCollection`1.CollectionChanged">
            <summary>
                <para>Occurs when the collection is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.NotificationCollection`1.CollectionChanging">
            <summary>
                <para>This event occurs when the collection is about to change. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.EndUpdate">
            <summary>
                <para>Unlocks the collection after a call to the <see cref="M:DevExpress.Utils.NotificationCollection`1.BeginUpdate"/> method, and causes an immediate update.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.NotificationCollection`1.IsUpdateLocked">
            <summary>
                <para>Gets whether the collection has been locked for updating.
</para>
            </summary>
            <value><b>true</b> if the collection is locked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Services.IMouseHandlerService">

            <summary>
                <para>Defines a service responsible for handling mouse events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse move event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse wheel event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.DataNodes.GroupUnion">

            <summary>
                <para>Specifies how groups of records should be split across pages, if required.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.None">
            <summary>
                <para>A group is printed so that it is split across several pages, if there isn't enough space on a page to print the entire group.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.WholePage">
            <summary>
                <para>A group is printed entirely on a single page (including its group header, rows and footer). This means that if there isn't enough space on a page to print the entire group, this group is printed on the following page.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.WithFirstDetail">
            <summary>
                <para>A group is split across several pages "as is". However, if there isn't enough space on a page to print a Group Header together with the following group row, they both are moved to the next page, so that a Group Header is never printed on a page alone (with no group rows below it). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.IPrintingSystem">

            <summary>
                <para>Provides the base functionality of the <b>XtraPrinting Library</b>.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange">
            <summary>
                <para>Occurs after certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object have been changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintingSystem.AutoFitToPagesWidth">
            <summary>
                <para>For internal use. If implemented by a class, gets or sets the number of virtual pages which should be placed on one physical page, so their total width is the same as the width of a physical page.
</para>
            </summary>
            <value>An integer value which represents the number of pages. 
</value>


        </member>
        <member name="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange">
            <summary>
                <para>Occurs before certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object are changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateBrick(System.String)">
            <summary>
                <para>If implemented by a class, creates a brick by its type name.


</para>
            </summary>
            <param name="typeName">
		A <see cref="T:System.String"/> specifying the type name of the brick to be created.


            </param>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateImageBrick">
            <summary>
                <para>If implemented by a class, creates an image brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IImageBrick"/> interface.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreatePanelBrick">
            <summary>
                <para>If implemented by a class, creates a panel brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPanelBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateProgressBarBrick">
            <summary>
                <para>If implemented by a class, creates a progress bar brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPanelBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateRichTextBrick">
            <summary>
                <para>If implemented by a class, creates a rich text brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IRichTextBrick"/> interface.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateTextBrick">
            <summary>
                <para>If implemented by a class, creates a text brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPanelBrick"/> interface.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintingSystem.Images">
            <summary>
                <para>If implemented by a class, contains a collection of images to be cached when creating a document.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.Native.ImagesContainer"/> object.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.InsertPageBreak(System.Single)">
            <summary>
                <para>If implemented by a class, inserts a page break at a specified position.

</para>
            </summary>
            <param name="pos">
		A <see cref="T:System.Single"/> value which specifies the position to insert a page break.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.SetCommandVisibility(DevExpress.XtraPrinting.PrintingSystemCommand,System.Boolean)">
            <summary>
                <para>If implemented by a class, changes the visibility of the specified printing system command.

</para>
            </summary>
            <param name="command">
		A <see cref="T:DevExpress.XtraPrinting.PrintingSystemCommand"/> object specifying the command whose visibility needs to be changed.


            </param>
            <param name="visible">
		One of the <see cref="T:DevExpress.XtraPrinting.CommandVisibility"/> enumeration values specifying a new visibility state for the command.


            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintingSystem.Version">
            <summary>
                <para>Identifies the <b>XtraPrinting Library</b> version.
</para>
            </summary>
            <value>A text string representing <b>XtraPrinting Library</b>'s version info.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.ILink">

            <summary>
                <para>Provides the basic functionality to create reports.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ILink.CreateDocument">
            <summary>
                <para>If implemented by a class, initiates report generation.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.ILink.CreateDocument(System.Boolean)">
            <summary>
                <para>If implemented by a class, creates a document from the link, so the document can be displayed or printed. Optionally, can generate pages in background. 
</para>
            </summary>
            <param name="buildPagesInBackground">
		<b>true</b> to generate pages in background; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.IBrickGraphics">

            <summary>
                <para>Provides basic report drawing functions.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraPrinting.IBrickGraphics.DefaultBrickStyle">
            <summary>
                <para>If implemented by a class, gets and sets the default style for bricks.
</para>
            </summary>
            <value>The default style for bricks.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrickGraphics.DrawBrick(DevExpress.XtraPrinting.IBrick,System.Drawing.RectangleF)">
            <summary>
                <para>If implemented by a class, adds a brick to a report.
</para>
            </summary>
            <param name="brick">
		The brick to be added to a report.

            </param>
            <param name="rect">
		A <b>RectangleF</b> structure that specifies the location and size of the current brick.

            </param>
            <returns>The brick added to a report.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrickGraphics.RaiseModifierChanged">
            <summary>
                <para>If implemented by a class, raises the <b>ModifierChanged</b> event.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.IBrick">

            <summary>
                <para>Provides the basic functionality to draw brick objects and to specify brick properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.GetProperties">
            <summary>
                <para>Obtains the <b>Hashtable</b> collection of properties for the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.
</para>
            </summary>
            <returns>A <b>Hashtable</b> object that contains properties of the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(System.Object[,])">
            <summary>
                <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface based on the specified <i>properties</i> array.
</para>
            </summary>
            <param name="properties">
		A two-dimesional array that identifies property names and values to set.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(System.Collections.Hashtable)">
            <summary>
                <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface
based on the specified <b>Hashtable</b> object.
</para>
            </summary>
            <param name="properties">
		Identifies the <b>Hashtable</b> collection of property names and values that must be set.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.ChangeEventHandler">

            <summary>
                <para>Represents a method that will handle the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventHandler.Invoke(System.Object,DevExpress.XtraPrinting.ChangeEventArgs)">
            <summary>
                <para>Represents a method that will handle the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.ChangeEventArgs">

            <summary>
                <para>Provides data for the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> class and sets its <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName"/> property to a specified value.
</para>
            </summary>
            <param name="eventName">
		The event name.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.Add(System.String,System.Object)">
            <summary>
                <para>Initializes a new instance of the <b>DevExpress.XtraPrinting.ChangeEventArgs.EventInfo</b> class with the specified name and value and adds it to the collection.

</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> specifying the event's name.


            </param>
            <param name="value">
		An <see cref="T:System.Object"/> specifying the value of the <b>DevExpress.XtraPrinting.ChangeEventArgs.EventInfo</b> object.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName">
            <summary>
                <para>Gets the event name that initiated a <b>ChangeEvent</b>.
</para>
            </summary>
            <value>The event name that initiated a <b>ChangeEvent</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.ValueOf(System.String)">
            <summary>
                <para>Returns an object, containing information about the event with the specified name.

</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> specifying the event name.

            </param>
            <returns>A <b>DevExpress.XtraPrinting.ChangeEventArgs.EventInfo</b> object with the specified name.

</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStyle">

            <summary>
                <para>Represents a report drawing style.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(DevExpress.XtraPrinting.BorderSide,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,DevExpress.XtraPrinting.BrickStringFormat)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class.
</para>
            </summary>
            <param name="sides">
		Visible brick borders.

            </param>
            <param name="borderWidth">
		The border width.

            </param>
            <param name="borderColor">
		The border color

            </param>
            <param name="backColor">
		The background color.

            </param>
            <param name="foreColor">
		The foreground color.

            </param>
            <param name="font">
		Font settings.

            </param>
            <param name="sf">
		Text formatting and layout settings.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(DevExpress.XtraPrinting.BrickStyle)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class and copies the settings from the object passed as the parameter.
</para>
            </summary>
            <param name="src">
		A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object whose settings are used to initialize the created object's properties.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(System.Single)">
            <summary>
                <para>Initializes a new instance of the BrickStyle class with the specified dpi value.
</para>
            </summary>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value for the BrickStyle's padding.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BackColor">
            <summary>
                <para>Gets or sets the background color.
</para>
            </summary>
            <value>A <b>Color</b> representing the background color.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderColor">
            <summary>
                <para>Gets or sets the border color.
</para>
            </summary>
            <value>A <b>Color</b> representing the border color. 
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderDashStyle">
            <summary>
                <para>Specifies the dash style for the brick's border.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BorderDashStyle"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle">
            <summary>
                <para>Gets or sets the border style of a brick.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that represents the border style of a brick.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth">
            <summary>
                <para>Gets or sets the border width.
</para>
            </summary>
            <value>The border width.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderWidthSerializable">
            <summary>
                <para>Gets or sets the string value used to support serialization of the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth"/> property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Clone">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.

</para>
            </summary>
            <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.CreateDefault">
            <summary>
                <para>Creates the BrickStyle instance with the defaul settings.
</para>
            </summary>
            <returns>A BrickStyle object representing a new brick style.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Default">
            <summary>
                <para>Gets the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object whose properties are set to their default values.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object representing a report drawing style.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.DefaultFont">
            <summary>
                <para>Gets the default font for a brick style.
</para>
            </summary>
            <value>The default font for a brick style.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,System.Single,System.Boolean)">
            <summary>
                <para>Deflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.


            </param>
            <param name="applyBorderStyle">
		<b>true</b> to apply the current border style; otherwise, <b>false</b>. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,System.Single)">
            <summary>
                <para>Deflates the specified rectangle by the width of borders represented by this brick style.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single,DevExpress.XtraPrinting.BrickBorderStyle)">
            <summary>
                <para>Deflates the specified rectangle by the specified width of the specified borders using the specified border style.


</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.

            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <param name="borderStyle">
		A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that specifies the brick style.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single)">
            <summary>
                <para>Deflates the specified rectangle by the specified width of the specified borders.


</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.


            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Dispose">
            <summary>
                <para>Disposes of the BrickStyle object.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified <b>Object</b> is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.
</para>
            </summary>
            <param name="obj">
		The <b>Object</b> to compare with the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.

            </param>
            <returns><b>true</b>, if the specified <b>Object</b> is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Font">
            <summary>
                <para>Gets or sets the <b>Font</b> used to display text.
</para>
            </summary>
            <value>The <b>Font</b> used to display text.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.ForeColor">
            <summary>
                <para>Gets or sets the foreground color.
</para>
            </summary>
            <value>The foreground color.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.GetHashCode">
            <summary>
                <para>Serves as a hash function suitable for use in hashing algorithms and data structures like a hash table.

</para>
            </summary>
            <returns>Hash code for the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/>.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,System.Single,System.Boolean)">
            <summary>
                <para>Inflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before inflating.


            </param>
            <param name="applyBorderStyle">
		<b>true</b> to apply the current border style; otherwise, <b>false</b>. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,System.Single)">
            <summary>
                <para>Inflates the specified rectangle by the width of borders represented by this brick style.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before inflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single,DevExpress.XtraPrinting.BrickBorderStyle)">
            <summary>
                <para>Inflates the specified rectangle by the specified width of specified borders using the specified border style.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.

            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <param name="borderStyle">
		A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that specifies the brick style.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single)">
            <summary>
                <para>Inflates the specified rectangle by the specified width of specified borders.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.

            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.IsTransparent">
            <summary>
                <para>Gets a value indicating whether the brick style paints a <i>transparent</i> brick.

</para>
            </summary>
            <value><b>true</b> if the brick will be painted as <i>transparent</i>; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.IsValid">
            <summary>
                <para>Gets a value indicating whether the brick style is valid.

</para>
            </summary>
            <value><b>true</b> if the current brick style is valid; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Padding">
            <summary>
                <para>Gets or sets the padding values of a brick.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object which contains the padding values of a brick.

</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BackColor"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorderColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BackColor"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorderDashStyle">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderDashStyle"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorders">
            <summary>
                <para>Resets all border settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorderWidth">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetFont">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.Font"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetForeColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.ForeColor"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetPadding">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.Padding"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetTextAlignment">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.TextAlignment"/> property value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Scale(System.Single)">
            <summary>
                <para>Rescales the brick style to the specified ratio.
</para>
            </summary>
            <param name="ratio">
		A <see cref="T:System.Single"/> value specifying the ratio to rescale the brick style.

            </param>
            <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object which represents the brick style with the scaling applied.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.SetAlignment(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment)">
            <summary>
                <para>Sets the brick's alignment.
</para>
            </summary>
            <param name="horzAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value.

            </param>
            <param name="vertAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Sides">
            <summary>
                <para>Gets or sets a value defining which borders of the current brick are visible.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumerator value, defining visible brick borders.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.StringFormat">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance specifying text formatting and layout.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> specifying text formatting and layout.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.TextAlignment">
            <summary>
                <para>Gets or sets the alignment of the text in the brick.

</para>
            </summary>
            <value>One of the <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration's values that specifies how the text is aligned in the brick.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.IPrintable">

            <summary>
                <para>Defines methods that enable different controls to be printed using the <b>XtraPrinting Library</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.AcceptChanges">
            <summary>
                <para>If implemented by a class, applies all changes made by the <b>Property editor</b> when implemented by a class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintable.CreatesIntersectedBricks">
            <summary>
                <para>If implemented by a class, determines whether the created print document contains intersected bricks.

</para>
            </summary>
            <value><b>true</b> if the class creates intersected bricks; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.HasPropertyEditor">
            <summary>
                <para>If implemented by a class, determines whether the class provides the <b>Property editor</b> form.
</para>
            </summary>
            <returns><b>true</b>, if the class provides the <b>Property editor</b>; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintable.PropertyEditorControl">
            <summary>
                <para>If implemented by a class, returns a form which allows a user to set printing properties when implemented by a class.
</para>
            </summary>
            <value>The <b>Property editor</b> form that allows customizing printing properties of a control.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.RejectChanges">
            <summary>
                <para>If implemented by a class, cancels changes made by a user in the <b>Property editor</b> when implemented by a class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.ShowHelp">
            <summary>
                <para>If implemented by a class, invokes the help system for the <b>Property editor</b> when implemented by a class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.SupportsHelp">
            <summary>
                <para>If implemented by a class, determines whether the help system is available for the <b>Property editor</b> when implemented by a class .
</para>
            </summary>
            <returns><b>true</b> if the help system is available for the <b>Property editor</b>; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ParameterValue">

            <summary>
                <para>This class supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.#ctor(System.Int32)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="tag">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.#ctor">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.Equals(System.Object)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="obj">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current ParameterValue object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ParameterValue.Tag">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.OperandParameter">

            <summary>
                <para>This class supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor(System.String)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="parameterName">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor(System.String,System.Object)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="parameterName">
		 

            </param>
            <param name="value">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.Clone">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.Equals(System.Object)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="obj">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current OperandParameter object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandParameter.ParameterName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.DataNodes.IRootDataNode">

            <summary>
                <para>Represents the interface which should be implemented by an object to be printed via the <see cref="T:DevExpress.Xpf.Printing.VisualDataNodeLink"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.DataNodes.IRootDataNode.GetTotalDetailCount">
            <summary>
                <para>If implemented by a class, returns the total number of detail rows.

</para>
            </summary>
            <returns>An integer value specifying the total detail count.
</returns>


        </member>
        <member name="T:DevExpress.Utils.DXCollection`1">

            <summary>
                <para>Represents the universal collection, which may be used as a base class for other collection classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DXCollection`1.#ctor">
            <summary>
                <para>Initializes a new instance of the DXCollection@lt;T@gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.DXCollection`1.Item(System.Int32)">
            <summary>
                <para>Provides indexed access to individual items in the collection.

</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the desired item's position within the collection. If it's negative or exceeds the last available index, an exception is raised. 

            </param>
            <value>A @lt;T@gt; object which represents the item at the specified position.
</value>


        </member>
        <member name="T:DevExpress.Utils.Localization.XtraLocalizer`1">

            <summary>
                <para>Represents the base class for all localizer classes.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.Localization.XtraLocalizer`1.Active">
            <summary>
                <para>Gets or sets a localizer object providing localization of the user interface at runtime.
</para>
            </summary>
            <value>A XtraLocalizer@lt;T@gt; descendant, which is used to localize the user interface at runtime.
</value>


        </member>
        <member name="E:DevExpress.Utils.Localization.XtraLocalizer`1.ActiveChanged">
            <summary>
                <para>Fires immediately after the <see cref="P:DevExpress.Utils.Localization.XtraLocalizer`1.Active"/> property value has been changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.CreateResXLocalizer">
            <summary>
                <para>Returns an <b>XtraLocalizer</b> object representing resources based on the thread's language and regional settings (culture).
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object representing resources based on the thread's culture.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.CreateXmlDocument">
            <summary>
                <para>Creates an XML document, which contains resource strings provided by the current XtraLocalizer@lt;T@gt; object.
</para>
            </summary>
            <returns>A <see cref="T:System.Xml.XmlDocument"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.GetActiveLocalizerProvider">
            <summary>
                <para>Returns an active localizer provider for this XtraLocalizer@lt;T@gt; object.
</para>
            </summary>
            <returns>An <b>ActiveLocalizerProvider@lt;T@gt;</b> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.GetLocalizedString(DevExpress.Utils.Localization.T)">
            <summary>
                <para>Gets the string, localized by the current XtraLocalizer@lt;T@gt;, for the specified user interface element.
</para>
            </summary>
            <param name="id">
		A <b>T</b> enumeration value specifying the UI element whose caption (text) is to be localized.

            </param>
            <returns>A <see cref="T:System.String"/> representing the text to be displayed within the specified UI element.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Localization.XtraLocalizer`1.Language">
            <summary>
                <para>Gets  the name of the language currently used by this localizer object.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> specifying the language used to localize the user interface.
</value>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.RaiseActiveChanged">
            <summary>
                <para>Raises the <see cref="E:DevExpress.Utils.Localization.XtraLocalizer`1.ActiveChanged"/> event.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.SetActiveLocalizerProvider(DevExpress.Utils.Localization.Internal.ActiveLocalizerProvider`1)">
            <summary>
                <para>Sets an active localizer provider for this XtraLocalizer@lt;T@gt; object.
</para>
            </summary>
            <param name="value">
		An <b>ActiveLocalizerProvider@lt;T@gt;</b> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.WriteToXml(System.String)">
            <summary>
                <para>Saves the current XtraLocalizer@lt;T@gt;'s resources to the specified XML file.
</para>
            </summary>
            <param name="fileName">
		A <see cref="T:System.String"/> specifying the file name (including the file path), to which all localization resources will be saved.

            </param>


        </member>
        <member name="T:DevExpress.Schedule.KnownDateDay">

            <summary>
                <para>Serves as a base class to represent a day corresponding to the particular date. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.KnownDateDay.#ctor(System.DateTime,System.String)">
            <summary>
                <para>Initializes a new instance of the KnownDateDay class with the specified date and display name.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Schedule.KnownDateDay.Date">
            <summary>
                <para>Returns a date, associated with the current <b>KnownDateDay</b> object or its descendant.
</para>
            </summary>
            <value>A <see cref="T:System.DateTime"/> value.
</value>


        </member>
        <member name="P:DevExpress.Schedule.KnownDateDay.DisplayName">
            <summary>
                <para>Gets or sets the name of the day to display, associated with the current <b>KnownDateDay</b> object or its descendant.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing a name of the day.
</value>


        </member>
        <member name="M:DevExpress.Schedule.KnownDateDay.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current KnownDateDay instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current KnownDateDay instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.KnownDateDay.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current KnownDateDay object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStringFormat">

            <summary>
                <para>Encapsulates text layout information (such as alignment, orientation and tab stops) and display manipulations (such as ellipsis insertion and national digit substitution).

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified text and line alignment.
</para>
            </summary>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.

            </param>
            <param name="lineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified string alignment.

</para>
            </summary>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified formatting information.
</para>
            </summary>
            <param name="options">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value representing formatting information. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormat)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from an existing <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="source">
		A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from which to initialize a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object. 

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format. It also uses the specified text and line alignment settings.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.


            </param>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.


            </param>
            <param name="lineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat,System.Drawing.StringFormatFlags)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format. It also uses the specified formatting settings.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.

            </param>
            <param name="options">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringFormatFlags,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified text and line alignment, formatting settings, hotkey prefix and trimming mode.

</para>
            </summary>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.

            </param>
            <param name="lineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.


            </param>
            <param name="formatFlags">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.


            </param>
            <param name="hotkeyPrefix">
		A <see cref="T:System.Drawing.Text.HotkeyPrefix"/> enumeration value representing the hotkey prefix. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.HotkeyPrefix"/> property.

            </param>
            <param name="trimming">
		A <see cref="T:System.Drawing.StringTrimming"/> enumeration value representing the trimming mode. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat,System.Drawing.StringTrimming)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format. It also uses the specified trimming settings.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.


            </param>
            <param name="trimming">
		A <see cref="T:System.Drawing.StringTrimming"/> enumeration value representing the trimming mode. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified formatting information, text and line alignment settings.
</para>
            </summary>
            <param name="options">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value representing formatting information. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.

            </param>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.


            </param>
            <param name="lineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment">
            <summary>
                <para>Gets or sets text alignment information.
</para>
            </summary>
            <value>A <b>StringAlignment</b> enumeration value that specifies text alignment information.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeAlignment(System.Drawing.StringAlignment)">
            <summary>
                <para>Returns a BrickStringFormat object cloned from the current BrickStringFormat object, with the new string alignment applied.
</para>
            </summary>
            <param name="newAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value, representing new string alignment.

            </param>
            <returns>A cloned BrickStringFormat object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeAlignment(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
                <para>Returns a BrickStringFormat object cloned from the current BrickStringFormat object, with the new string and line alignment applied.
</para>
            </summary>
            <param name="newAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value, representing new string alignment.

            </param>
            <param name="newLineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value, representing new line alignment.

            </param>
            <returns>A cloned BrickStringFormat object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeFormatFlags(System.Drawing.StringFormatFlags)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="options">
		A <b>StringFormatFlags</b> enumeration value containing formatting information.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeLineAlignment(System.Drawing.StringAlignment)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="newLineAlignment">
		A <b>StringAlignment</b> enumeration value representing line alignment.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Clone">
            <summary>
                <para>Creates an exact copy of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object created by this method.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Create(DevExpress.XtraPrinting.TextAlignment,System.Boolean)">
            <summary>
                <para>Creates a new instance of the BrickStringFormat class with the specified settings.
</para>
            </summary>
            <param name="textAlignment">
		A <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration value.


            </param>
            <param name="wordWrap">
		<b>true</b> to enable word-wrapping; otherwise, <b>false</b>.

            </param>
            <returns>A new BrickStringFormat instance with the specified values. 
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Create(DevExpress.XtraPrinting.TextAlignment,System.Drawing.StringFormatFlags)">
            <summary>
                <para>Creates a new instance of the BrickStringFormat class with the specified settings.
</para>
            </summary>
            <param name="textAlignment">
		A <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration value.

            </param>
            <param name="formatFlags">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. 

            </param>
            <returns>A new BrickStringFormat instance with the specified values. 
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Dispose">
            <summary>
                <para>Disposes of the BrickStringFormat object.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Equals(System.Object)">
            <summary>
                <para>Determines whether a specific <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance equals the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.
</para>
            </summary>
            <param name="obj">
		A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance against which to compare with the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.

            </param>
            <returns><b>true</b> if a specific <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance equals the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags">
            <summary>
                <para>Gets or sets a <b>StringFormatFlags</b> enumeration that contains formatting information.
</para>
            </summary>
            <value>A <b>StringFormatFlags</b> enumeration that contains formatting information.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.GetHashCode">
            <summary>
                <para>Serves as a hash function suitable for use in hashing algorithms and data structures like a hash table.
</para>
            </summary>
            <returns>Hash code for the current <b>Object</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.HotkeyPrefix">
            <summary>
                <para>Gets the <see cref="T:System.Drawing.Text.HotkeyPrefix"/> object for this BrickStringFormat object.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Text.HotkeyPrefix"/> enumeration value which represents the hotkey prefix for this BrickStringFormat object.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment">
            <summary>
                <para>Gets or sets line alignment.
</para>
            </summary>
            <value>A <b>StringAlignment</b> enumeration value that represents line alignment information.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.PrototypeKind">
            <summary>
                <para>Gets or sets a prototype string format for the current string format.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind"/> enumeration value which specifies the prototype string format.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming">
            <summary>
                <para>Gets text trimming mode.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.StringTrimming"/> enumeration value that specifies text trimming mode.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Value">
            <summary>
                <para>Gets the <b>StringFormat</b> instance representing current text formatting.
</para>
            </summary>
            <value>Current text formatting.
</value>


        </member>
        <member name="T:DevExpress.Services.IKeyboardHandlerService">

            <summary>
                <para>Defines a service responsible for processing keyboard input.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a key down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the pressed key and key modifiers.

            </param>


        </member>
        <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a key press event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> object specifying the character that is composed when the user presses a key.

            </param>


        </member>
        <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a key up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the released key and key modifiers.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.PageInfo">

            <summary>
                <para>Contains the values that define what kind of information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.DateTime">
            <summary>
                <para>Indicates that <b>DateTime</b> information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.None">
            <summary>
                <para>Indicates that the <see cref="P:DevExpress.XtraPrinting.PageInfoTextBrick.Format"/> property value is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoTextBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.Number">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.NumberOfTotal">
            <summary>
                <para>Indicates that both the current page number and the total number of pages in the current report are displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.RomHiNumber">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in uppercase.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.RomLowNumber">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in lowercase.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.UserName">
            <summary>
                <para>Indicates that the user name for the current thread is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickAlignment">

            <summary>
                <para>Specifies brick alignment relative to its layout rectangle.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Center">
            <summary>
                <para>Specifies whether a brick is aligned by the center of the layout rectangle.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Far">
            <summary>
                <para>Specifies wheter a brick is aligned away from the original position of the layout rectangle.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Near">
            <summary>
                <para>Specifies that the text shall be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.None">
            <summary>
                <para>Cancels brick alignment.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BorderSide">

            <summary>
                <para>Specifies the borders displayed around a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.All">
            <summary>
                <para>Applies all borders to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Bottom">
            <summary>
                <para>Applies the bottom border to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Left">
            <summary>
                <para>Applies the left border to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.None">
            <summary>
                <para>No borders are applied to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Right">
            <summary>
                <para>Applies the right border to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Top">
            <summary>
                <para>Applies the top border to a brick.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnFilterMode">

            <summary>
                <para>Contains values that specify how a column's data is filtered via the auto filter row and filter dropdown.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnFilterMode.DisplayText">
            <summary>
                <para>A column's data is filtered by the display text.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnFilterMode.Value">
            <summary>
                <para>A column's data is filtered by the edit values.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.VertAlignment">

            <summary>
                <para>Specifies the vertical alignment of an object or text in a control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Bottom">
            <summary>
                <para>Places the text to the bottom of an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Center">
            <summary>
                <para>Centers the text within an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Default">
            <summary>
                <para>Places the text to its default position. The default position is in the center of an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Top">
            <summary>
                <para>Places the text to the top of an object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.HorzAlignment">

            <summary>
                <para>Specifies the horizontal alignment of an object or text in a control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Center">
            <summary>
                <para>Centers an object or text within an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Default">
            <summary>
                <para>Places an object or text at the position specified via the <b>RightToLeft</b> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Far">
            <summary>
                <para>Sets the object/text position relative to its default position within an object.
The default position of the text is specified via the <b>RightToLeft</b> property. If the default alignment is left, setting an alignment option to Far places the text to the right. Conversely, if the default alignment is right, setting the alignment option to Far places the text to the left.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Near">
            <summary>
                <para>Sets the object/text position relative to its default position within an object.
The default position of the text is specified via the <b>RightToLeft</b> property. If the default alignment is left, setting the alignment option to Near places the text to the left. Convercely, if the default alignment is right, setting the alignment option to Near places the text to the right.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Commands.ICommandUIState">

            <summary>
                <para>Defines a command state.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Checked">
            <summary>
                <para>Gets or sets the checked state of the command.
</para>
            </summary>
            <value><b>true</b> if the command state is checked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.EditValue">
            <summary>
                <para>Gets or sets the value used by a command.
</para>
            </summary>
            <value>An object representing the value used by a command.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Enabled">
            <summary>
                <para>Gets or sets whether the command is enabled.
</para>
            </summary>
            <value><b>true</b> to enable the command; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Visible">
            <summary>
                <para>Gets or sets whether the UI element to which the command is attached is visible.
</para>
            </summary>
            <value><b>true</b> to display the UI element; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.Commands.CommandSourceType">

            <summary>
                <para>Lists the command sources.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Keyboard">
            <summary>
                <para>The command is issued from the keyboard.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Menu">
            <summary>
                <para>The command is issued from the menu.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Mouse">
            <summary>
                <para>The command is issued using a mouse.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Unknown">
            <summary>
                <para>The type of the command source is not known.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.CheckSpellingResultType">

            <summary>
                <para>Lists result types of spelling check.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Misspelling">
            <summary>
                <para>A misspelled word is found.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Repeating">
            <summary>
                <para>A repeating word is found.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Success">
            <summary>
                <para>No errors are found
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Schedule.OutlookHolidaysLoader">

            <summary>
                <para>Represents a class implemented to load holidays from the Outlook.hol file.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.#ctor">
            <summary>
                <para>Initializes a new instance of the OutlookHolidaysLoader class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.ExtractLocations(System.IO.Stream)">
            <summary>
                <para>Retrieves locations for which holidays are present.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays, as they are specified for MS Outlook.


            </param>
            <returns>An array of strings containing location names.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.ExtractLocations(System.String)">
            <summary>
                <para>Retrieves locations for which holidays are present.
</para>
            </summary>
            <param name="fileName">
		A string representing the location of the file containing holidays in MS Outlook format.

            </param>
            <returns>An array of strings containing location names.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String)">
            <summary>
                <para>Loads holidays from the specified file.
</para>
            </summary>
            <param name="fileName">
		A string that is the location of the file with holidays (default path for MS Office 2007 is "C:\Program Files\Microsoft Office\Office12\1033\Outlook.hol").


            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String,System.Text.Encoding,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified file, using the specified encoding.
</para>
            </summary>
            <param name="fileName">
		A string that is the location of the file with holidays (default path for MS Office 2007 is "C:\Program Files\Microsoft Office\Office12\1033\Outlook.hol").


            </param>
            <param name="encoding">
		A <see cref="T:System.Text.Encoding"/> class representing a character encoding.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified file.
</para>
            </summary>
            <param name="fileName">
		A string that is the location of the file with holidays (default path for MS Office 2007 is "C:\Program Files\Microsoft Office\Office12\1033\Outlook.hol").


            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream,System.Text.Encoding,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified stream, using the specified encoding.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.

            </param>
            <param name="encoding">
		A <see cref="T:System.Text.Encoding"/> class representing a character encoding.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream)">
            <summary>
                <para>Loads holidays from the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="T:DevExpress.Schedule.ExactWorkDay">

            <summary>
                <para>Represents a day that is recognized as a work day. 


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.#ctor(System.DateTime,System.String)">
            <summary>
                <para>Initializes a new instance of the ExactWorkDay class with the specified date and display name.

</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the working day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the working day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.CheckDate(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current ExactWorkDay.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to check.

            </param>
            <returns>A <see cref="F:DevExpress.Schedule.DateCheckResult.WorkDay"/> enumeration value if the date is a work day; otherwise the <see cref="F:DevExpress.Schedule.DateCheckResult.Unknown"/> value.
 
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.Clone">
            <summary>
                <para>Creates a copy of the current ExactWorkDay object.
</para>
            </summary>
            <returns>An ExactWorkDay object which is a copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current ExactWorkDay instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current ExactWorkDay instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current ExactWorkDay object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.IsWorkDay(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to be identified.

            </param>
            <returns><b>true</b> if the specified day is a working day; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Schedule.ExactWorkDay.Type">
            <summary>
                <para>Gets the day type associated with this class.
</para>
            </summary>
            <value>An <see cref="F:DevExpress.Schedule.WorkDayType.ExactWorkDay"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.IOptionsSpellings">

            <summary>
                <para>The options used for the spelling check. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.IOptionsSpellings.BeginUpdate">
            <summary>
                <para>Prevents the IOptionsSpellings object from being updated until the <b>EndUpdate</b> method is called.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.CheckFromCursorPos">
            <summary>
                <para>Start spelling check from the cursor position.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the spell checker should start checking from the cursor position.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.CheckSelectedTextFirst">
            <summary>
                <para>Spell check the selected text first.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether the spell checker should start checking the selected text first.
</value>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IOptionsSpellings.EndUpdate">
            <summary>
                <para>Unlocks the current object after a call has been made to the <b>BeginUpdate</b> method and also causes an immediate update.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreEmails">
            <summary>
                <para>Gets or sets whether e-mail addresses should be excluded from the check.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether words that are e-mail addresses should be checked.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreMarkupTags">
            <summary>
                <para>Gets or sets whether text enclosed with specific markup tags should be checked.

</para>
            </summary>
            <value><b>true</b> to exclude text within tags from the check; otherwise, <b>false</b>.


</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreMixedCaseWords">
            <summary>
                <para>Gets or sets whether the spell checker ignores words containing different case letters in positions other than the first.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether mixed case words should be checked.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreRepeatedWords">
            <summary>
                <para>Gets or sets whether the spell checker ignores repeated words.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether the text should be checked for repeated words.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreUpperCaseWords">
            <summary>
                <para>Gets or sets whether the spell checker ignores words in which all letters are uppercase.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words in which all letters are uppercase should be checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreUrls">
            <summary>
                <para>Gets or sets whether the spell checker ignores the URLs in text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words which are URLs should be checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreWordsWithNumbers">
            <summary>
                <para>Gets or sets whether the spell checker ignores words that contain numbers.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words which contain numbers should be checked.
</value>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.IOptionsSpellings.OptionChanged">
            <summary>
                <para>Occurs when any of the spelling check options are changed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Schedule.Holiday">

            <summary>
                <para>Represents a day that is recognized as a holiday. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.Holiday.#ctor(System.DateTime,System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the Holiday class with the specified date, display name and location.

</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>
            <param name="location">
		A <see cref="T:System.String"/> which specifies the location of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.Holiday.Location"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.#ctor(System.DateTime,System.String)">
            <summary>
                <para>Initializes a new instance of the Holiday class with the specified date and display name.

</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.CheckDate(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current holiday.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to check.

            </param>
            <returns>A <see cref="F:DevExpress.Schedule.DateCheckResult.Holiday"/> enumeration value if the date is a holiday; otherwise the <see cref="F:DevExpress.Schedule.DateCheckResult.Unknown"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.Clone">
            <summary>
                <para>Creates a copy of the current Holiday object.
</para>
            </summary>
            <returns>A Holiday object which is a copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current Holiday instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current Holiday instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current Holiday object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.IsWorkDay(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current holiday.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to be identified.

            </param>
            <returns>Always <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.Schedule.Holiday.Location">
            <summary>
                <para>Gets or sets the location attribute of the holiday.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the holiday's location.
</value>


        </member>
        <member name="P:DevExpress.Schedule.Holiday.Type">
            <summary>
                <para>Gets the day type associated with this class.
</para>
            </summary>
            <value>A <see cref="F:DevExpress.Schedule.WorkDayType.Holiday"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.ISpellChecker">

            <summary>
                <para>The base interface of a spell checker.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.AddToDictionary(System.String)">
            <summary>
                <para>Add a word to a custom dictionary.
</para>
            </summary>
            <param name="word">
		A word to add.

            </param>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.AfterCheckWord">
            <summary>
                <para>Occurs after a word is checked.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CanAddToDictionary">
            <summary>
                <para>Determines whether a word can be added to a custom dictionary.
</para>
            </summary>
            <returns><b>true</b> if a word can be added to the dictionary; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Check(System.Object)">
            <summary>
                <para>Checks the specified control for spelling mistakes.
</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Windows.Forms.Control"/> object, representing a control to be checked for spelling mistakes.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CheckText(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
                <para>Checks the specified text in the specified control with the specified culture.
</para>
            </summary>
            <param name="control">
		A control to check.

            </param>
            <param name="text">
		A string representing a text to check.

            </param>
            <param name="culture">
		The <see cref="T:System.Globalization.CultureInfo"/> object that specifies the culture settings (the symbols encoding, language and phonetic specifics).

            </param>
            <returns>An object exposing the <see cref="T:DevExpress.XtraSpellChecker.ICheckSpellingResult"/> interface.
</returns>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.Culture">
            <summary>
                <para>Gets or sets the culture-specific settings of the spell checker.
</para>
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> object that specifies culture settings (the symbols encoding, language and phonetic specifics).


</value>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.CultureChanged">
            <summary>
                <para>Occurs when the current culture setting of a spell checker is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.CustomDictionaryChanged">
            <summary>
                <para>Occurs when a custom dictionary is modified by an end-user.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.GetOptions(System.Object)">
            <summary>
                <para>Provides access to spell checking options for a specified control.
</para>
            </summary>
            <param name="control">
		A control for which spelling options are set.

            </param>
            <returns>An object exposing the <see cref="T:DevExpress.XtraSpellChecker.IOptionsSpellings"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.GetSuggestions(System.String,System.Globalization.CultureInfo)">
            <summary>
                <para>Constructs an ordered list of suggestions for a given word.
</para>
            </summary>
            <param name="word">
		A <see cref="T:System.String"/>, representing a word for which the suggestions should be calculated.


            </param>
            <param name="culture">
		A <see cref="T:System.Globalization.CultureInfo"/> object that specifies culture settings (the symbols encoding, language and phonetic specifics).

            </param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1[[System.String]]"/> list of suggested words.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Ignore(System.Object,System.String,DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position)">
            <summary>
                <para>Disregards a word in a text.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.


            </param>
            <param name="word">
		A word to ignore while checking.

            </param>
            <param name="start">
		The position from which to start ignoring the word.


            </param>
            <param name="end">
		Position to finish ignoring the word.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.IgnoreAll(System.Object,System.String)">
            <summary>
                <para>Skips the specified word throughout the entire content of the specified control.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.

            </param>
            <param name="word">
		A word to ignore.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.IsChecking">
            <summary>
                <para>Gets whether the spell checker is checking the content. 
</para>
            </summary>
            <value><b>true</b> if a spell checker is checking the content; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.RegisterIgnoreList(System.Object,DevExpress.XtraSpellChecker.IIgnoreList)">
            <summary>
                <para>Registers a list of words as the words to ignore while checking.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.


            </param>
            <param name="ignoreList">
		An object exposing the <see cref="T:DevExpress.XtraSpellChecker.IIgnoreList"/> interface and representing a list of words to skip.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.SpellCheckMode">
            <summary>
                <para>Gets or sets the spell check mode.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckMode"/> enumeration member.
</value>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.SpellCheckModeChanged">
            <summary>
                <para>Occurs when the <b>SpellCheckMode</b> is changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.UnregisterIgnoreList(System.Object)">
            <summary>
                <para>Unregisters the previously registered list of words which should be skipped while checking.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.

            </param>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded">
            <summary>
                <para>Occurs after a word is added to a custom dictionary.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.OptionsLayoutGrid">

            <summary>
                <para>Contains options that specify how a control's layout is stored to and restored from storage (a stream, xml file or system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsLayoutGrid class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter.

</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.Columns">
            <summary>
                <para>Contains options that specify how the columns' and bands' settings are stored to and restored from storage (a stream, xml file or sysytem registry).
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.OptionsColumnLayout"/> object that specifies how the columns' and bands' settings are stored to and restored from storage.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.Reset">
            <summary>
                <para>Resets all options to their default values.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAllOptions">
            <summary>
                <para>Gets or sets whether all the control's settings (except for the appearance settings and style conditions) are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if all the control's settings are included in the layout when it's saved to storage and these settings are restored when the layout is restored from the storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAppearance">
            <summary>
                <para>Gets or sets whether the control's appearance settings are also stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's appearance settings are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreDataSettings">
            <summary>
                <para>Gets or sets whether the control's grouping, sorting, filtering settings and summaries are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's grouping, sorting, filtering settings and summaries are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreVisualOptions">
            <summary>
                <para>Gets or sets whether the control's visual options are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's visual options are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.OptionsLayoutBase">

            <summary>
                <para>Represents the base class for classes which contain the options that are responsible for how the control's layout is stored to and restored from storage (a stream, xml file or system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutBase.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsLayoutBase class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutBase.FullLayout">
            <summary>
                <para>Returns an OptionsLayoutBase object whose settings indicate that the full layout of the control should be stored to and restored from storage (a stream, xml file or system registry).

</para>
            </summary>
            <value>A OptionsLayoutBase object whose settings indicate that the full layout of the control should be stored to/restored from storage.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutBase.LayoutVersion">
            <summary>
                <para>Gets or sets the version of the layout.

</para>
            </summary>
            <value>A string representing the version of the layout.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutBase.ShouldSerializeCore(System.ComponentModel.IComponent)">
            <summary>
                <para>Gets whether the settings should be persisted.
</para>
            </summary>
            <param name="owner">
		The component that owns the current settings.

            </param>
            <returns><b>true</b> if the settings should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Utils.OptionsColumnLayout">

            <summary>
                <para>Contains options that specify how column specific settings are stored to and restored from storage (a stream, xml file or the system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsColumnLayout.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsColumnLayout class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.AddNewColumns">
            <summary>
                <para>Gets or sets whether the columns that exist in the current control but do not exist in a layout when it's restored should be retained.

</para>
            </summary>
            <value><b>true</b> to retain the columns that exist in the current control's layout but don't exist in the layout being restored; <b>false</b> to destroy such columns.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsColumnLayout.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter.

</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.RemoveOldColumns">
            <summary>
                <para>Gets or sets whether the columns that exist in a layout when it's restored but that don't exist in the current control should be discarded or added to the control.

</para>
            </summary>
            <value><b>true</b> to discard the columns that exist in the layout being restored but don't exist in the current control; <b>false</b> to add these columns to the control.

</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAllOptions">
            <summary>
                <para>Gets or sets whether all the settings of a control's columns/bands (except for the appearance settings) are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if all the settings of a control's columns/bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAppearance">
            <summary>
                <para>Gets or sets whether the appearance settings of the columns and bands are also stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the appearance settings of the columns and bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreLayout">
            <summary>
                <para>Gets or sets whether the position, width and visibility of the columns and bands are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the position, width and visibility of columns and bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.PrintingSystemCommand">

            <summary>
                <para>Specifies the commands which can be executed in the printing system's document preview.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Background">
            <summary>
                <para>Identifies the <b>Background</b> menu item, which is a parent for the <b>FillBackground</b> and <b>Watermark</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method, to hide or show the Background items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ClosePreview">
            <summary>
                <para> Closes the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Customize">
            <summary>
                <para> Invokes the property editor of the component which is about to be printed. Note that this component should implement the <b>IPrintable</b> interface.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.DocumentMap">
            <summary>
                <para> Shows or hides the <b>Document Map</b> pane, which displays the hierarchy of bookmarks in a report document.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.EditPageHF">
            <summary>
                <para> Invokes the <b>Header/Footer Editor</b> dialog. This dialog is used to insert standard page information into a report's headers and footers.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportCsv">
            <summary>
                <para>Exports a document to a CSV (comma-separated values) file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportFile">
            <summary>
                <para> Exports the current document to a file (a report can be exported to PDF, RTF, HTML, MHT, XLS, TXT, CSV and various image formats).




</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportGraphic">
            <summary>
                <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats).

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportHtm">
            <summary>
                <para>Exports the current document to an HTML file.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportMht">
            <summary>
                <para>Exports the current document to an MHT file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportPdf">
            <summary>
                <para>Exports the current  document to a PDF file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportRtf">
            <summary>
                <para>Exports the current document to an RTF file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportTxt">
            <summary>
                <para>Exports the current document to a TXT file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXls">
            <summary>
                <para>Exports the current document to an XLS file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXlsx">
            <summary>
                <para>Exports the current document to an XLSX file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXps">
            <summary>
                <para><para>Exports the current document to an XPS file.</para>

This is supported only by the DXPrinting for WPF library.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.File">
            <summary>
                <para>Identifies the <b>File</b> menu item, which is a parent for the <b>PageSetup</b>, <b>Print</b>, <b>PrintDirect</b>, <b>ExportFile</b> and <b>SendFile</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method, to hide or show the File items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.FillBackground">
            <summary>
                <para> Invokes the <b>Color</b> dialog which allows the background color of the current document to be specified.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Find">
            <summary>
                <para> Invokes the <b>Find</b> dialog in the document's preview. This dialog provides a search dialog which allows end-users to search a report for specific text directly in the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.HandTool">
            <summary>
                <para> Invokes or hides the <b>Hand Tool</b> in the document's preview. This tool is used for scrolling the pages of the document being previewed.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Magnifier">
            <summary>
                <para> Invokes the preview magnifier. When the magnifier is activated the mouse cursor resembles a magnifying glass and a click on a preview page zooms in on it. There are two possible values for the magnification level. The first magnification value is always fixed and is equal to 100 %. The other value is calculated so that the entire preview page is visible at once without having to scroll it.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.MultiplePages">
            <summary>
                <para> Shows the layout of the document's preview across multiple pages. Note that if you need to specify a particular number of page rows and columns in a Print Control, the <see cref="M:DevExpress.XtraPrinting.Control.PrintControl.SetPageView"/> method will be useful in this case.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.None">
            <summary>
                <para>Doesn't identify any command. This member is intended for internal use only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Open">
            <summary>
                <para> Opens a document. This command is represented both via the menu item and toolbar button.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayout">
            <summary>
                <para>Identifies the item which is the parent to the <b>PageLayoutContinuous</b> and <b>PageLayoutFacing</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method to hide or show the page layout items from the menu of the <b>Preview Form</b>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutContinuous">
            <summary>
                <para>Changes the view of the document's preview so that the pages are arranged as a continuous vertical column.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutFacing">
            <summary>
                <para>Changes the view of the document's preview so that the pages are arranged side-by-side.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageMargins">
            <summary>
                <para>Selects the margin sizes for the entire document. Note that this command is in use in the Ribbon Print Preview Form only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageOrientation">
            <summary>
                <para>Switches the pages between portrait and landscape layouts. Note that this command is in use in the Ribbon Print Preview Form only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageSetup">
            <summary>
                <para> Invokes the <b>Page Setup</b> dialog which allows some of the page's settings to be adjusted (orientation, margins, paper size and source). 


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PaperSize">
            <summary>
                <para>Chooses the paper size of the document. Note that this command is in use in the Ribbon Print Preview Form only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Parameters">
            <summary>
                <para> Shows or hides the <b>Parameters</b> pane, which enables end-users to enter parameter values, apply them to a report's data source and re-generate the report document.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Pointer">
            <summary>
                <para>Shows the mouse pointer, when there is no need to show either the <b>Hand Tool</b>, or the <b>Magnifier</b>.  Note that this command is in use in the Ribbon Print Preview Form only.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Print">
            <summary>
                <para> Invokes the <b>Print</b> dialog for the current document. This dialog allows the printer to be selected, its properties set, the number of copies entered and the range of pages to print to be specified.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PrintDirect">
            <summary>
                <para> Prints the document preview directly, without any dialogs. This is useful when the printer's settings don't need to be changed before a document is printed. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Save">
            <summary>
                <para> Saves a document to a file. This command is represented both via the menu item and toolbar button.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Scale">
            <summary>
                <para> Stretches or shrinks the document to a percentage of its actual size. Note that if you need to specify a particular scale factor or number of pages a document should be scaled to, the <see cref="P:DevExpress.XtraPrinting.Document.ScaleFactor"/> and <see cref="P:DevExpress.XtraPrinting.Document.AutoFitToPagesWidth"/> properties will be useful.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageDown">
            <summary>
                <para>Scrolls one page down, as when an end-user presses the PAGE DOWN key.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageUp">
            <summary>
                <para>Scrolls one page up, as when an end-user presses the PAGE UP key.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendCsv">
            <summary>
                <para>Exports the current document to a CSV (comma-separated values) file and sends it via e-mail.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendFile">
            <summary>
                <para> Exports the document in the preview window, then creates a new e-mail in the default system mailer and attaches the exported document to the e-mail. The exporting format can be specified via the drop-down list.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendGraphic">
            <summary>
                <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats) and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendMht">
            <summary>
                <para>Exports the current document to an MHT file and sends it via e-mail.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendPdf">
            <summary>
                <para>Exports the current document to a PDF file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendRtf">
            <summary>
                <para>Exports the current document to an RTF file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendTxt">
            <summary>
                <para>Exports the current document to a TXT file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXls">
            <summary>
                <para>Exports the current document to an XLS file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXlsx">
            <summary>
                <para>Exports the current document to an XLSX file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXps">
            <summary>
                <para><para>Exports the current document to a XPS file and sends it via e-mail.</para>

This is supported only by the DXPrinting for WPF library.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowFirstPage">
            <summary>
                <para> Displays the first page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowLastPage">
            <summary>
                <para> Displays the last page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowNextPage">
            <summary>
                <para> Moves to the next page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowPrevPage">
            <summary>
                <para> Moves to the previous page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.StopPageBuilding">
            <summary>
                <para>Identifies the <b>Stop</b>  button, which is displayed in the status bar to the right of the progress bar, and can be used to stop generating a document.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SubmitParameters">
            <summary>
                <para>Submits the current values of parameters on the Parameters pane and starts generating a report document with these parameter values.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.View">
            <summary>
                <para>Identifies the <b>View</b> menu item, which is a parent for the <b>PageLayout</b>, <b>Toolbar</b>, <b>Status Bar</b> and <b>Customize</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method, to hide or show the View items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ViewWholePage">
            <summary>
                <para>Zooms a document in or out so that only one entire page of the document is shown in the preview.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Watermark">
            <summary>
                <para> Invokes the <b>Watermark</b> dialog which can be used to specify either background text or a picture as a document's watermark. Note that a document's watermark can be accessed via the <see cref="P:DevExpress.XtraPrinting.PrintingSystemBase.Watermark"/> property.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Zoom">
            <summary>
                <para> Zooms in on a document by one of the predefined zoom factors. They are as follows: 10%, 25%, 50%, 75%, 100%, 150%, 200% and 500%.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomIn">
            <summary>
                <para> Zooms the preview in. Each time this command is performed, the preview gets zoomed in by approximately 10%.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomOut">
            <summary>
                <para> Zooms the preview out.  Each time this command is performed, the preview gets zoomed out by approximately 10%.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToPageWidth">
            <summary>
                <para>Zooms a document in or out as appropriate, so that the width of the current page fits the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTextWidth">
            <summary>
                <para>Zooms a document in or out as appropriate, so that the width of the text in the current page fits the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTwoPages">
            <summary>
                <para>Zooms a document in or out as appropriate, so that only two entire pages of the document are shown in the preview.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToWholePage">
            <summary>
                <para>Zooms a document in or out as appropriate, so that only a single page of the document is shown in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomTrackBar">
            <summary>
                <para>Identifies the <b>Zoom</b> trackbar control, which is available in the bottom-right corner of the Print Preview Form with a Ribbon.
</para>
            </summary>


        </member>
    </members>
</doc>
